;
	.RADIX	16
	.ASECT
	.ENABLE	AMA
;
; *****************************************************************
; *****************************************************************
; **                                                             **
; **              B  L  A  C  K      W  I  D  O  W               **
; **                                                             **
; **   AN ORIGINAL COMPUTER PROGRAM BY BRUCE WILLARD MERRITT     **
; **                                                             **
; *****************************************************************
; *****************************************************************
;
;     *******************************************************
;     * COPYRIGHT 1983 ATARI. UNAUTHORIZED REPRODUCTION,    *
;     * ADAPTATION, DISTRIBUTION, PERFORMANCE OR DISPLAY OF *
;     * THIS COMPUTER PROGRAM OR THE ASSOCIATED AUDIOVISUAL *
;     * WORK IS STRICTLY PROHIBITED!!!!!!!                  *
;     *******************************************************
;

	.IF NE,0

DATE INITIATED:		APRIL, 1981
DATE PERVERTED:		DECEMBER 20, 1982
PROJECT CHARGE #:	33000
HARDWARE REQUIRED:	GRAVITAR HARDWARE

        **************************
        *  M E M O R Y    M A P  *
        **************************

0000-7FF	READ/WRITE	PROGRAM RAM

2000-27FF	READ/WRITE	VG RAM 2K VRAM

2800-2FFF	READ-ONLY	VG ROM VROM0

3000-3FFF	READ-ONLY	VG ROM VROM1

4000-4FFF	READ-ONLY	VG ROM VROM2

5000-5FFF	READ-ONLY	VG ROM VROM3

6000	POKEY1	READ/WRITE	POKEY 0

	THIS IS THE INBOARD OF THE TWO 8 SWITCH DIPS
	DIP D4 OPTION SWITCHES VIA POT INPUTS
	WRITE TO POKEY1+0B THEN READ POKEY1+8


					DIP #>	8   7
	DIP8 (BIT0) \				--- ---
	             --> 0 : 1 COIN 1 CREDIT   	OFF OFF *
	DIP7 (BIT1) /    1 : 2 COINS 1 CREDIT   ON  OFF
		  	 2 : FREE PLAY          OFF ON
		  	 3 : 1 COIN 2 CREDITS   ON  ON


					DIP #>	6   5
	DIP6 (BIT2) \				--- ---
		     --> 0 : RIGHT MECH X 1	OFF OFF *
	DIP5 (BIT3) /    4 : RIGHT MECH X 4	ON  OFF
			 8 : RIGHT MECH X 5	OFF ON
			 C : RIGHT MECH X 6	ON  ON

			
					DIP #>	4
						---
	DIP4 (BIT4)	 00 : LEFT MECH X1 *	OFF
			 10 : LEFT MECH X2	ON


					DIP #>	3   2   1
						--- --- ---
	DIP3 (BIT5)	00 : NO BONUS COINS	OFF OFF OFF *
	DIP2 (BIT6)	20 : ADD 1 EVERY 2	ON  OFF OFF
	DIP1 (BIT7)	40 : ADD 1 EVERY 4	OFF ON  OFF
			60 : ADD 2 EVERY 4	ON  ON  OFF
			80 : ADD 1 EVERY 5	OFF OFF ON
			A0 : ADD 1 EVERY 3	ON  OFF ON
			C0 : NO BONUS COINS	OFF ON  ON
			E0 : NO BONUS COINS	ON  ON  ON


6800	POKEY2	READ/WRITE	POKEY 1

	THIS IS THE OUTBOARD OF THE TWO 8 SWITCH DIPS
	DIP B4 OPTION SWITCHES VIA POT INPUTS
	WRITE TO POKEY2+0B THEN READ POKEY2+8


					DIP #>	8   7
						--- ---
	DIP8 (BIT0) \
		     --> 0 : 13 MAX START  	OFF OFF
	DIP7 (BIT1) /	 1 : 21 MAX START * 	ON  OFF
			 2 : 37 MAX START	OFF ON
			 3 : 53 MAX START	ON  ON


					DIP #>	6   5
						--- ---
	DIP6 (BIT2) \
		     --> 0 : 3 SPIDERS/GAME *	OFF OFF
	DIP5 (BIT3) /	 4 : 4 SPIDERS/GAME  	ON  OFF
			 8 : 5 SPIDERS/GAME	OFF ON
			 C : 6 SPIDERS/GAME	ON  ON


					DIP #>	4   3
						--- ---
	DIP4 (BIT4) \
		     --> 00 : EASY		OFF OFF
	DIP3 (BIT5) /    10 : MEDIUM *		ON  OFF
			 20 : HARD		OFF ON
			 30 : DEMONSTRATION	ON  ON


					DIP #>	2   1
						--- ---
	DIP2 (BIT6) \
		     -->  0 : BONUS @ 20,000 *	OFF OFF
	DIP1 (BIT7) /	 40 : BONUS @ 30,000 	ON  OFF
			 80 : BONUS @ 40,000	OFF ON
			 C0 : NO BONUS		ON  ON


7000	EAIN	READ-ONLY	EAROM READ DATA

7800	FLAGS1	READ-ONLY	SWITCH INPUTS

		.......0	RIGHT COIN LOW TRUE
		......0.	LEFT COIN LOW TRUE
		.....0..	AUX COIN BUTTON LOW TRUE
		....0...	SLAM LOW TRUE (**SPARE**)
		...0....	SELF TEST LOW TRUE
		..0.....	SIGNATURE ANALYSIS LOW TRUE
		.1......	VG HALTED
		1.......	3KHZ

8000	FLAGS2	READ-ONLY	MORE SWITCHES

		.......0	MOVE RIGHT
		......0.	MOVE LEFT
		.....0..	MOVE DOWN
		....0...	MOVE UP
		...?....	(**SPARE**)
		..1.....	OPTION 0
		.1......	OPTION 1
		1.......	OPTION 2

8800	FLAGS3	READ-ONLY	AND MORE SWITCHES

		.......0	FIRE RIGHT
		......0.	FIRE LEFT
		.....0..	FIRE DOWN
		....0...	FIRE UP
		...?....	(**SPARE**)
		..0.....	START 1 PLAYER
		.0......	START 2 PLAYER
		0.......	COCKTAIL (HEHEHE)

8800	OUTPUT	WRITE-ONLY	CONTROLS

		.......1	RIGHT COIN COUNTER
		......1.	LEFT COIN COUNTER
		.....0..	1K RAM BANK SELECT (0=NORMAL)
		....0...	COIN LOCK-OUT COIL ENABLED
		...0....	PLAYER START 1 LED
		..0.....	PLAYER START 2 LED
		.0......	INVERT VECTORS ABOUT X AXIS
		0.......	INVERT VECTORS ABOUT Y AXIS

8840	GOVG	WRITE-ONLY	VG GO COMMAND

8880	STOPVG	WRITE-ONLY	VG WHOA (RESET) COMMAND

88C0	RSTIRQ	WRITE-ONLY	INTERRUPT ACKNOWLEDGE

8900	EACTL	WRITE-ONLY	EAROM CONTROL WRITE

8940	EADAL	WRITE-ONLY	EAROM WRITE DATA

8980	RSTDOG	WRITE-ONLY	WATCH DOG RESET

89C0		WRITE		(**SPARE**) WRITE DECODE

9000-9FFF	READ-ONLY	PROGRAM EPROM ROM0

A000-AFFF	READ-ONLY	PROGRAM EPROM ROM1

B000-BFFF	READ-ONLY	PROGRAM EPROM ROM2

C000-CFFF	READ-ONLY	PROGRAM EPROM ROM3

D000-DFFF	READ-ONLY	PROGRAM EPROM ROM4

E000-EFFF	READ-ONLY	PROGRAM EPROM ROM5

	IRQ @ 250HZ (4 MILLI-SECONDS)

	.ENDC
;
; COLOR GUNS CONTROLLED BY 3 LSB'S OF STAT INSTRUCTION
; HIGH-TRUE... D2:RED  D1:GREEN  D0:BLUE
;
FRED	= 4	;FULL RED
FBLUE	= 1	;FULL BLUE GUN
FGREEN	= 2	;FULL GREEN GUN
ZWHITE	= 7	;ALL THREE AT ONCE
ZYELLO	= FRED!FGREEN
ZPURPL	= FRED!FBLUE
ZRED	= FRED
ZTURQ	= FGREEN!FBLUE
ZGREEN	= FGREEN
ZBLUE	= FBLUE
ZBLACK	= 0
;
VGRAM	= 2000	;2000-27FF VECTOR GENERATOR RAM
WEBCLR	= VGRAM!500
POKEY1	= 6000
POKEY2	= 6800
RANDOM	= POKEY1+0A
RAM	= 0	;0-7FF
EPROM	= 09000	;9000-EFFF APPLICATION EPROM
EAIN	= 7000	;READ INCOMING DATA LOCATION
EADAL	= 8940	;DATA ADDRESS FOR READ/WRITE
EACTL	= 8900	;CONTROL BYTE FOR EAROMS
;
	.SBTTL	EAROM HARDWARE DEFINITIONS
			;
			;EAROM HARDWARE DEFINITIONS
			;
;EAIN			;HARDWARE READ PORT
;EADAL			;BASE ADDRESS (STORE TO EADAL +OFFSET
			;TO ENABLE ADDRESS)
;EACTL			;EA CONTROL BATCH;NOT C1,C2 FUNCTION
			;0 0 READ MODE
			;1 0 WRITE MODE
			;1 1 ERASE MODE
EACK	=1		;CLOCK BIT
EAC1	=4		;C1 (INVERTED TO CHIP)
EAC2	=2		;C2
EACE	=8		;CHIP SELECT
;
;
; OUTPUT BITS
;
RSTDOG	= 8980	;WATCH DOG RESET (WRITE)
RSTIRQ	= 88C0	;INTERRUPT RESET (ACKNOWLEDGE)
;
;
; STATE OF THIS BYTE SAVED IN XYSAVE
;
OUTPUT	= 8800	;FOR COINS,LEDS,INVERT & GIG
COUNTR	= 1	;'THE' COIN COINTER
COINLO	= 8	;COIN LOCK-OUT
LED1	= 10
LED2	= 20
INVRTX	= 40	;INVERT X ON DISPLAY
INVRTY	= 80	;INVERT Y ON DISPLAY
;
; INPUT OPTION AND STATUS BITS
;
FLAGS1	= 7800		;COIN MECHANISM
COINR	= 1		;RIGHT COIN SWITCH
COINL	= 2		;LEFT COIN SWITCH
AUXSWT	= 4
SMACK	= 8		;SLAM SWITCH
SELF	= 10		;SELF TEST SWITCH
SIGANL	= 20		;SIGNATURE ANALYSIS
VGHLT	= 40		;VECTOR GENERATOR HALTED
KHZ3	= 80		;3 KHZ
;
FLAGS2	= 8000
;
JYMASK	= 0F		;MASK FOR EITHER JOYJYICK
JYUP	= 8		;UP
JYDOWN	= 4		;DOWN
JYLEFT	= 2		;LEFT
JYRITE	= 1		;RIGHT
;
FLAGS3	= 8800
;
STRT2	= 40
STRT1	= 20
;
MAXR	= 58		;FOR WEB DRAWING SIZE (SEE BBWEB.MAC)
;
STOPVG	= 8880	;VG HALT LOCATION
GOVG	= 8840	;VG GO LOCATION
;
	.NLIST
	.=0
.MACRO	LDAL	...1
	.BYTE	0A9
	.WORD	...1
	.=.-1
	.ENDM
.MACRO	LDAH	...1
	.BYTE	0A9
	.ENABL	M68
	.WORD	...1
	.DSABL	M68
	.=.-1
	.ENDM
;
;
POWRON:	.BLKB 1
MLTLSB:	.BLKB 1
OP1:	.BLKB 1		;MULTIPLICAND
OP2:	.BLKB 1		;MULTIPLIER (SIGNED)
RESULT:	.BLKB 1		;LSB OF RESULT
BTEMP1:	.BLKB 2		;BACKGROUND TEMPORARY
BTEMP2:	.BLKB 1
VGX:	.BLKB 2
VGY:	.BLKB 2
VGBRIT::	.BLKB 1
PREVX:	.BLKB 2		;ABSOLUTE X OF LAST POINT
PREVY:	.BLKB 2		;ABSOLUTE Y OF LAST POINT
VGLIST::	.BLKB 2		;ADDRESS WITHIN VG RAM FOR NEXT INSTRUCTION
VGLINK:	.BLKB 2		;ADDR OF WEB JSRL
INCRX:	.BLKB 1		;SLOPE OF RADIAL DELTAX
INCRY:	.BLKB 1		;SLOPE OF RADIAL DELTAY
ITEMP1:	.BLKB 1		;INTERRUPT LEVEL TEMP CELL
ITEMP2:	.BLKB 1		;INTERRUPT LEVEL TEMP CELL
TEMP:	.BLKB 2
TEMP1:	.BLKB 1
TEMP2:	.BLKB 1
TEMP3:	.BLKB 1
TEMP4:	.BLKB 1
IMGADR:	.BLKB 2		;TABLE ADDRESS FOR ROTATION VECTOR SUBROUTINES
;
; COLLISION HIT TABLE : 1ST BYTE IS # HITS
; FOLLOWED BY THAT MANY BYTE PAIRS OF OBJ #
; AND OBJ TYPE
;
HITS:	.BLKB 31.
;
HITTER:	.BLKB 1		;BASE OF CURRENT HITTER
HITTEE:	.BLKB 1		;BASE OF HITTEE
DX:	.BLKB 2		;DELTA X OF COLLISION UNDER TEST
DY:	.BLKB 2		;DELTA Y OF COLLISION UNDER TEST
MINRNG:	.BLKB 1		;MINIMUM COLLISION RANGE
MINHDG:	.BLKB 1		;HEADING TO NEAREST COLLISION
MINTGT:	.BLKB 1		;OBJECT # NEAREST TARGET
TO:	.BLKB 2
TWKCLR:	.BLKB 1
FROM:	.BLKB 2
RNGSIZ:	.BLKB 1		;RING SIZE MOLTIPLIER (6=1ST WAVE)
TRIGER:	.BYTE 0		;PLAYER TRIGGER DEBOUNCE
HISCOR:	.BLKB 3
;
S1VGAL:	.BLKB 1		;ADDR WITHIN LIST OF VCTR INST
S1VGAH:	.BLKB 1
S2VGAL:	.BLKB 1		;ADDR WITHIN LIST OF VCTR INST
S2VGAH:	.BLKB 1
HSVGAL:	.BLKB 1		;ADDR WITHIN LIST OF VCTR INST
HSVGAH:	.BLKB 1
;
TRIALX:	.BLKB 2
TRIALY:	.BLKB 2
TRING:	.BLKB 1
SDFLAG:	.BLKB 1		;SPECIAL DISPLAYS FLAGS
;
			;SCREEN ADDR OF HIGH SCORE
S1ADRX	=-180
S1ADRY	=180
S2ADRX	=0E0
S2ADRY	=180
L1VGAL:	.BLKB 1
L1VGAH:	.BLKB 1
L2VGAL:	.BLKB 1		;VGLIST ADDRESS OF STAT FOR #LIVES
L2VGAH:	.BLKB 1
FOODX:	.BLKB 2
FOODY:	.BLKB 2
TARGEX:	.BLKB 2
TARGEY:	.BLKB 2
PTRIG:	.BYTE 0
DIED:	.BLKB 1		;0=LIVING NZ=WHO KILLED US
MAXRNG:	.BLKB 1		;MAXIMUM RING NUMBER IN USE
WRKOBJ:	.BLKB 1		;WORKING OBJECT #
FRMCNT:	.BLKB 1		;FRAME COUNTER FOR SMARTS
;
OTB:	.BLKB 1		;KNOB TEMP
TBHD:	.BLKB 1		;OTHER KNOB TEMP
KNOB:	.BLKB 1		;KNOB VALUE
WALKIN:	.BLKB 1		;0=NORMAL PLAY 1=NEW LIFE WALKING IN
RNGCLR:	.BLKB 2		;ADDR OF 1ST RING STAT -4
SECOND:	.BLKB 3		;# SECONDS INTO GAME (2 BYTES) & 249 COUNT DOWN
WVTIME:	.BLKB 1		;# SECONDS IN THIS WAVE
GAMES:	.BLKB 2		;# GAMES PLAYED
GTIME:	.BLKB 3		;# SECONDS GAME TIME
GAMMSG:	.BLKB 2		;POINTER TO DLIST
HELPER:	.BLKB 1		;FRAME COUNTER FOR VG NO HALT
MOSQUE:	.BLKB 3		;MOSQUITO GROUP INTELLIGENCE
;
; INDIRECT POINTERS USED BY BWPOKY
;
TEMPB:	.BLKB 2
TEMPC:	.BLKB 2
;
; THE FOLLOWING ITEMS ARE INCLUDED AS NEEDED BY THE COIN65 ROUTINE
;
EMCTRS	= 3		;1 REAL COUNTER BUT DRIVERS FOR 2
MECHS	= 3		;3 COIN MECHANISMS 3RD IS AUX
SLAM	= 0		;SLAM IS LOW TRUE
CNTINT	= 0		;BWINTR WILL INCREMENT $INTCT
COIN	= 0		;LOW TRUE SENSORS
COIN01	= 1		;BIT 0 = RIGHT D1 = LEFT
COIN67	= 0		;COINS SWITCHES NOT AT D7 AND D6
$COINA	= FLAGS1	;COIN SWITCHES
$LAM	= FLAGS1	;SLAM SWITCH
$LMBIT	= SMACK		;SLAM LOCATION
$CCTIM:	.BLKB EMCTRS	;1 ELECTRO-MECHANICAL COUNTER
$CMODE:	.BLKB 1		;COIN OPTIONS
$$CRDT:	.BLKB 1		;TOTAL ACTIVE CREDITS
$PSTSL:	.BLKB MECHS	;POST-SLAM COUNTERS
$CNSTT:	.BLKB MECHS	;COIN & STATUS TIMERS
$INTCT:	.BLKB 1		;INTERRUPT COUNTER
$CNCT:	.BLKB 1		;TOTAL # COINS SEEN
$LMTIM:	.BLKB 1		;SLAM PRE-TIMER
;
; EAROM INDIRECTION POINTER
;
EASRCE:	.BLKB 2		;USED ONLY BY EAROM ROUTINES
;
; STORAGE FOR OUTPUT CONTROL STATE
;
XYSAVE:	.BLKB 1		;COPY OF <OUTPUT> STATE
;
; EVENTS BYTE SHIFTS LEFT (1 BIT) EVERY
; PARADE LAP TO FLAG 8 DIFFERENT FOLKS
;
EVENTS:	.BLKB 1		;BIT# MEANING
			;0	HORNETS MAKE HORNETS
			;1	HORNETS MAKE MUTANTS
			;2	GRENADE BUG APPEARS
			;3	FFF REPLACES VCB
			;4
			;5
			;6
			;7
;
; INDIRECT POINTERS USED BY LANGUAGES
;
LITRAL:	.BLKB 2
INDYLO:	.BLKB 1
INDYHI:	.BLKB 1
XCOMP::	.BLKB 4		;USED BY VGVTR ROUTINE
INTADR:	.BLKB 2		;ADDRESS OF WINNING INITIALS IN DISPLAY LIST
;
; FOLLOWED BY VGMSGA INDEX FOLLWED BY HSTBL CHARACTER CODE
;
IENTRY:	.BLKB 3		;INITIALS ENTRY (LETTER NUMBER 0,1 OR 2)
DBOUNC:	.BLKB 1		;FIRE BUTTON FLAG FOR INITITALS
INTIDX:	.BLKB 1		;HSTBL INDEX TO RECEIVE INITIALS
MSGADR:	.BLKB 2		;START ADDR OF TEXT IN DISPLAY LIST
;
TIMER:	.BYTE	0	;INTERRUPT COUNTER/TIMER
;
; POKEY REQUIRED LOCATIONS (BWPOKY)
;
NCHANL	==16.		;POKEY CHANNEL COUNT FOR BWPOKY
POINT:	.BLKB NCHANL	;POINTER ADDRESS 
CURRENT:	.BLKB NCHANL
FRAMES:	.BLKB NCHANL
COUNT:	.BLKB NCHANL
TEMPA:	.BLKB 2
ATRACT:	.BLKB 1
FRAME:	.BLKB 3
SINDEX:	.BLKB 1
$BC::	.BLKB 1
$BCCNT::	.BLKB 1
$TOUGH:	.BLKB 1	;0=EASY 1=MED & DEMO 2=HARD
BUGSHW:	.BLKB 1	;HELP LESSON PHASE NUMBER CURRENTLY DOING
;*********************************************************************
; DEBUG FRAME COUNTERS (FIXED LOCATION)
;*********************************************************************
	.=0FC
DEBUG:	.BLKB 4		;0=NORM NZ=SINGLE FRAME
			;SAVE STATE OF BUTTON
			;THROTTLE PRESET
			;THROTTLE TIMER
;********************************************************************
; PSEUDO MOTION-OBJECT DESCRIPTION BLOCK DEFINITIONS
;********************************************************************
;
OBJVGC	= 2100
OBJVGA	= 2200
;
; OFFSET	MEANING
; ------	-----------
;
; +0		FLAG BYTE
;
;		BIT0 & BIT1 = 'HEALTH'
;
;		00 = ALIVE
;		01 = STUCK
;		10 = DYING
;		11 = DEAD
;
HEALTH	= 3
HELTH	= 0FC
STUCK	= 1
DYING	= 2
DEAD	= 3
;
;		BIT2 = 1 IF NEWLY BORN OBJECT (XY POS ONLY)
;		       0 IF NORMAL IN USE
;
;
;		BIT3 0=NORMAL  1=NO MOVEMENT POSSIBLE
;		BIT4 SPARE
;		BIT5 SPARE
;		BIT6 SPARE
;		BIT7 SPARE

; +1		MORE FLAGS BYTE
;
;		BITS(0-3) CREATURE TYPE:
;			0 = MOSQUITO
;			1 = PLAYER [SPIDER]
;			2 = HORNET
;			3 = EGG
;				OBJARM = 0 HORNET EGG
;				OBJARM = NZ MUTANT EGG
;
;			4 = BULLET
;			5 = BONUS $ BUG
;			6 = MUTANT
;			7 = BEETLE
;			8 = TORPEDO
;			9 = THUNDER-BUG #1
;			A = THUNDER-BUG #2
;			B = CARRION GRUB-STEAK
;			C = SPARE
;			D = GRENADE BUG
;			E = VACUUM-CLEANER (VCB)
;			F = FICKLE FINGER OF FATE (FFF)
;
;		BITS4-7 : PPUM  PP = WING PICTURE #
;				U = 0 INCREMENT PP
;				U = 1 DECREMENT PP
;
;				M = SPARE
;
; +2		VARIES		: IF TYPE NEST 0:HORNET NZ:MUTANT
;
; +3		VARIES		USED BY THUNDER-BUGS
;
; +4		VARIES		?
;
; +5		VARIES		?
;
; +6		6 BIT HEADING
;
; +7		DELTA X STEPSIZE
;
; +8		DELTA Y STEPSIZE
;
; +9		16 BIT ABSOLUTE X COORD
;
; +11		16 BIT ABSOLUTE Y COORD
;
; +13		# DELAY FOR TARGETING / ESCAPE / WEB AGE
;
; +14		TARGET HEADING (DESIRED)
;
; +15		OBJECT COLLISION RADIUS (SIZE)
;
	.=100
;
OBJCLR:	.BLKB 32.	;OBJECT/COLOR LOOKUP
HALTED:	.BLKB 1		;NZ VG HALTED FOR A REASON
KILLER:	.BLKB 1		;PLAYER KILLER COUNTER
BRG2CN:	.BLKB 1		;USED BY ELECTRIC FENCE
RNG2CN:	.BLKB 1		;DITTO
VGINS:	.BLKB 2		;INTERRUPT VGLIST SAVE
;
ADTEMP:	.BLKB 4
;
; EAROM ROUTINE STORAGE POINTERS
;
EAZFLG:	.BLKB 1		;EA ROM ZERO FLAG (NOT 0=ZERO EAROM)

EAREQU::	.BLKB 1			;EA ROM ACCESS REQUEST
				;IF A BIT=0 THEN NO ACTION REQUESTED.
				;	 =1 THEN ACCESS THAT DATA.
				;D7 REPRESENTS 7TH BATCH OF DATA
				;D0 REPRESENTS 0TH BATCH OF DATA

EARWRQ::	.BLKB 1			;EA ROM ACCESS TYPE (MATCHES EAREQU)
				;IF BIT=0 THEN READ, ELSE WRITE
				;
EABAD::	.BLKB 1			;EA ROM ACCESS SUCCESS(0) FAIL(1) (MATCHES EAREQU)
				;
				;EA CONTROL BYTES FOR 1 OPERATION
				;
EAFLG::	.BLKB 1			;D7=1=ERASE	;=0=R/W
				;D6=1=WRITE	;D5=1=READ
				;D4=1=ZERO EAROM (IF D6=WRITE)
EAERAS	=80
EAWRIT	=40
EAREAD	=20
				;
EABC:	.BLKB 1			;BYTE INDEX INTO ADDRESS AT EASRCE
				;
EAX:	.BLKB 1			;BYTE OFFSET INTO EAROM FOR NEXT ACCESS
				;
EACNT:	.BLKB 1			;BYTE OFFSET INTO EAROM FOR LAST ACCESS
				;
EASEL:	.BLKB 1			;INDEX CODE FOR CURRENT BATCH OPERATION
				;
EACS:	.BLKB 1			;CHECKSUM
INSYNC:	.BLKB 1		;NON-ZERO ALL USING SAME INDEX
TARGET:	.BLKB 1		;LEADERS ATTACK HEADING
INTARM:	.BLKB 1		;ARM ON WHICH DANCERS INTRODUCED
;
;
	.=200
;
OBJFLG:	.BYTE 0		;FLAG & STATUS BYTE
OBJAUX:	.BYTE 0		;AUXILLARY FLAGS & STATUS
OBJARM:	.BYTE 0		;
OBJRNG:	.BYTE 0		;
OBJSTP:	.BYTE 0		;
OBJSPD:	.BYTE 0		;OBJECTS THROTTLE SETTING
OBJHDG:	.BYTE 0		;HEADING (0-3F)
OBJDX:	.BYTE 0		;16 BIT ADDRESS WITHIN DELTA TABLES
OBJDY:	.BYTE 0		;"	"	"	"	"
OBJABX:	.WORD 0		;ABSOLUTE X SCREEN COORDINATE
OBJABY:	.WORD 0		;ABSOLUTE Y SCREEN COORDINATE
OBJDLY:	.BYTE 0		;TARGETING DELAY / AGE / ESCAPE
OBJTGT:	.BYTE 0		;BEARING TO CURRENT DESIGNATED TARGET
OBJSIZ:	.BYTE 0		;COLLISION RADIUS
;
; DISPLAY LIST FOR OBJECTS IS FORMATTED AS FOLLOWS
;
;OBJVGA >>>>>	VCTR ABSX,ABSY,COLOR=BLACK
;	+4,5	JSRL OBJVGC
;	+6,7	CNTR
;
;OBJVGC >>>>>	STAT [BODY COLOR]
;	+2,3	SCAL (X,71) OBJECT'S SIZE
;	+4,5	JSRL BODY
;	+6,7	STAT [LEG/WING/JAW COLOR]
;	+8,9	JSRL LEGS/WINGS/JAWS [SEQUENCED]
;	+10,11	SCAL NORMAL SIZE (0,71)
;	+12,13	STAT COLOR=BLACK
;	+14,15	RTSL
;
;	**** FALLING SCORE DISPLAY ****
;
;	+4,5	JSRL TO 2280+ FOR POINT VALUE
;
;	+6,7	JMPL TO +10 (NORM STAT)
;
	.=300
;
STING:	.BLKB 1		;0=NORMAL SMELL ROUTINE 80=HAND-GRENADE RANGE TEST
NITBUG:	.BLKB 1		;NZ:HOLD EGGS NEG:VCB/FFF EXITS
SAVEX:	.BLKB 1		;LANGUAGES USE SAVE TEMP
NEGGS:	.BLKB 1		;#EGGS PUSHED THIS LIFE
ACTIVE: .BLKB 12.	;FFF/VCB ACTIVITY TABLE
			; BYTE 0 = # VCB/FFF ALIVE
			; BYTES 1-11 = WHERE THEY ARE
;
; H I G H   S C O R E   T A B L E 
;
HSTBL:	.BLKB 32.*6
ONEHZ:	.BLKB 1		;ONE SECOND DOWNCOUNTER
SPDARM:	.BLKB 1		;PLAYER ARM# / BADDIES ARRIVE OPPOSITE SIDE
;
;COMMON POKEY VARIABLES
;
WPKF:	.BYTE	0	;FLAG FOR WHICH POKEY TO UPDATE
;
TAGGED:	.BYTE 0		;#SUCCESSIVE TAGS BEATING FFF/VCB
STGAME:	.BYTE 0		;NON ZERO WHEN PLAYER STARTS
;
; TABLE <PSCORE> CONTAINS THE SCORES ACCHIEVED
; AT THE END OF EVERY 4TH WAVE BY EACH PLAYER (3 BYTES EACH)
; ROOM RESERVED FOR 100 WAVES
; INDEXED BY BINWAV-1
;
PSCORE:	.BLKB 75.	;100 WAVES FOR CURRENT PLAYER
;
DSTATE:	.BLKB 1		;CURRENT DISPLAY STATE
NSTATE:	.BLKB 1		;QUEUED DISPLAY STATE (0=LEAVE AS IS)
DTIME:	.BLKB 2		;BYTE 0:TIMER, 1:INDEX TO DSHOWS NEXT DISPLAY STATE
RTIME:	.BLKB 1		;TIMER TO ALLOW RESTART OF GAME
DANCEA:	.BLKB 2		;ADDRESS IN <DANCES> OF LEADERS PHASE
LEADER:	.BLKB 1		;INDEX OF PARADE LEADER
PARADE:	.BLKB 1		;ZERO:NORMAL NON-ZERO:CHALLENGE WAVE
;
; *****************************************************************************
;
; PLAYER VARIABLE STORAGE FOR 1/2 PLAYER GAMES
;
; *****************************************************************************
STRSAV	= .		;START OF SAVE AREA FOR 1/2 PLAYER MODES
;
;
; TABLE WEBS (BY ARM NUMBER) HOLDS RING OF WALL
;
WEBS:	.BLKB 12.	;INDEXED BY ARM#
BADCNT:	.BYTE 0
BAD2GO:	.BYTE 0		;# BAD GUYS YET TO ADD
RESPNT:	.BYTE 0,0,0	;RESUME GAME SCORE BONUS
BADGUY:	.BYTE 0		;# MOVING OBJECTS LEFT
CARCAS:	.BYTE 0		;#BODIES ON SCREEN
SQUAD:	.BYTE 0		;#FRAMES BETWEEN INTROS (COUNTER PRESET)
HOWMNY:	.BYTE 0		;# BAD GUYS ALLOWED ON SCREEN
WAVNUM:	.BYTE 0
GROWTH:	.BYTE 0
LIFE	= .-STRSAV
LIVES:	.BYTE 0
SCOR	= .-STRSAV
SCORE:	.BLKB 3
SPEED:	.BLKB 1		;SPEED OF OBJECTS YET TO BE ADDED IN THIS WAVE
BLIVES:	.BLKB 1		;10K COUNT-DOWN FOR BONUS LIVES
BLIPRE:	.BLKB 1		;PRESET FOR BLIVES 1=10K 2=20K 3=30K
PRVMSB:	.BLKB 1		;PREVIOUS SCORE MSB FOR BONUS DETECT
;
; STORAGE FOR # OF BAD GUYS (INDEXED BY OBJ TYPE)
; YET TO BE ADDED IN THIS WAVE
;
BADASS:	.BLKB 16.	;BULLETS, SPIDERS & NESTS NEVER ADDED
SPEEDY:	.BLKB 1		;CHALLENGE SPEED SETTING
RBIN	= .-STRSAV
RESBIN:	.BLKB 1		;MAXIMUM WAVE # COMPLETED OR RESTARTABLE
RWAIT	= .-STRSAV
RESUME:	.BLKB 1		;NON-ZERO FLAGS #WAVES TO WAIT BEFORE $ ADDED
RESEVT:	.BLKB 1		;EVENTS STATE TO RESTART
RESPED:	.BLKB 1		;PLAYERS SPEED UPON RESUME
SWAVE	= .-STRSAV
BINWAV:	.BLKB 1		;BINARY WAVE#
;
; END OF SAVE AREA DUPLICATED FOR 1/2 PLAYER GAMES
;
SAVSIZ	= .-STRSAV
; *****************************************************************************
;
GSAVE1:	.BLKB SAVSIZ	;SAVE BUFFER FOR PLAYER #1
GSAVE2:	.BLKB SAVSIZ	;SAVE BUFFER FOR PLAYER #2
;
NPLYRS:	.BLKB 1		;0=1 PLAYER GAME NZ=2 PLAYER GAME
PLAYER:	.BLKB 1		;0=PLAYER 1 NZ=PLAYER 2
P2NOTY:	.BLKB 1		;NZ:PLAYER 2 HASN'T PICKED START WAVE YET
P1OBJS:	.BLKB 0B0	;FOR ALL NON-BULLET OBJECTS
P2OBJS:	.BLKB 0B0	;TO SAVE EGGS AND $ ON DEATH
MAXRES:	.BLKB 1		;MAX ALLOWABLE STARTING WAVE NUMBER
STARTS:	.BLKB 1		;START SWITCH STATE
STRBOG:	.BLKB 1		;START SWITCHES DEBOUNCE
DIPD4:	.BLKB 1	;BITS FROM POKEY1 DIP SWITCH
DIPB4:	.BLKB 1	;BITS FROM POKEY2 DIP SWITCH
;
	.LIST
	.CSECT
;
                                                                                                                