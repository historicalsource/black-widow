	.TITLE BBMAIN
;
;      *******************************************************
;      * COPYRIGHT 1982 ATARI. UNAUTHORIZED REPRODUCTION,    *
;      * ADAPTATION, DISTRIBUTION, PERFORMANCE OR DISPLAY OF *
;      * THIS COMPUTER PROGRAM OR THE ASSOCIATED AUDIOVISUAL *
;      * WORK IS STRICTLY PROHIBITED!!!!!!!                  *
;      *******************************************************
;
;
	.INCLUDE BBRAM
	.ASECT
	.=^H09000
;******************************************************************************
;
; GLOBAL DEFINITIONS
;
	.GLOBL SUMS4	;CHECKSUM FOR 1ST PROGRAM PROM
	.GLOBL LITEM	;LIGHT-UP RESERVE LIVES
	.GLOBL POWERD	;POWER ON COMES IN HERE
	.GLOBL MXWAVE	;DEFINES MAX RESTART FOR DECAY
	.GLOBL DEATH	;PLAYER DIES
;
; EXTERNAL REFERENCES
;
	.GLOBL SELFT	;SELF-TEST NEVER COME BACK NORMAL
	.GLOBL MTMSG1,MTMSG2,MTMSG3
	.GLOBL MTMSG4,MTMSG6,MTMSG5
	.GLOBL MTMSG7,MTMSG8,MTMSG9
	.GLOBL MDEMO,MDEASY,MDMED,MDHARD
	.GLOBL MGAMZ	;GAMES PLAYED
	.GLOBL MLEVEL	;"WAVE"
	.GLOBL MLISTR	;LIVE PER GAME
	.GLOBL MAVGTM	;AVERAGE GAME TIME
	.GLOBL MMXSTR	;MAX START WAVE
	.GLOBL HEXBCD
	.GLOBL MPLAYR	;"PLAYER"
	.GLOBL SNDLS	;LETTER SELECT SOUND
	.GLOBL MGAMOV	;"GAME OVER"
	.GLOBL COLETR	;INITIALS COLOR TABLE
	.GLOBL FDIGIT	;USING Y AS INDEX PUT TWO DIGITS VIA VGHEXZ
	.GLOBL PDIGIT	;OTHER THAN 1ST BYTE
	.GLOBL VGSTAT
	.GLOBL MBOLIF	;BONUS SPIDER EVERY
	.GLOBL MCMODE
	.GLOBL MCMOD1	;1 COIN 1 2 PLAYS
	.GLOBL MCMOD2	;1 COIN 1 PLAY
	.GLOBL MCMOD3	;2 COINS 1 PLAY
	.GLOBL LOGO1	;Black
	.GLOBL LOGO2	;Widow
	.GLOBL VGVTR1
	.GLOBL MENTER
	.GLOBL VGHEXZ
	.GLOBL VGADD
	.GLOBL MPRMOV
	.GLOBL MPRFIR
	.GLOBL SEETBL
	.GLOBL VGMSGA
	.GLOBL MESG
	.GLOBL FINDHS	;SCAN HS TABLE
	.GLOBL KILWAV	;KILL OFF EVERYTHING
	.GLOBL MATARI	;COPYRIGHT MESSAGE
	.GLOBL INILIT	;LANGUAGE INITIALIZATION
	.GLOBL TEXT	;MESSAGE PROCESSOR
	.GLOBL TEXTS	;SELECT STARTING WAVE TEXT PROCESS
	.GLOBL SEEOBJ
	.GLOBL REHIIN	;READ-IN EAROM
	.GLOBL WRBOOK	;WRITE # GAMES TO EAROM
	.GLOBL EAZERO	;ZERO-OUT EAROM (ALL)
	.GLOBL WRHIIN	;UPDATE EAROM HI SCORE
	.GLOBL INISOU
	.GLOBL PUTZRO
	.GLOBL TUSK0
	.GLOBL ZIPPER
	.GLOBL DPROC
	.GLOBL WAVE
	.GLOBL SMART
	.GLOBL CHEAT
	.GLOBL MAKEIT
	.GLOBL SMASH
	.GLOBL WHOCLR
	.GLOBL QCNTR
	.GLOBL VGSCAL
	.GLOBL VGSCA1
	.GLOBL DOSTA
	.GLOBL QVCTRL
	.GLOBL BONUS
	.GLOBL VGJSRL
	.GLOBL VGJMPL
	.GLOBL DOWEB
	.GLOBL VGRTSL
	.GLOBL VGHALT
	.GLOBL ZEETBL
	.GLOBL MEMCPY
	.GLOBL DELTAS
	.GLOBL MUL8X8
	.GLOBL DMYSCR
	.GLOBL WHOSIZ	;OBJECT COLLISION SIZE
;******************************************************************************
;
	.SBTTL POWER-ON INITIALIZATION
;
;  P O W E R   O N   I N I T I A L I Z A T I O N
;******************************************************************************
;
	.ASCII /COPYRIGHT (C) ATARI 1982/
POWERD:	LDA #55		;"55" FLAGS POWERON ACTIVE
	STA POWRON
	LDA #0
	STA POKEY1+0F	;RESET 1ST POKEY
	STA POKEY2+0F	;RESET 2ND POKEY
	LDA #7
	STA POKEY1+0F
	STA POKEY2+0F
	CLD
	STA STOPVG	;DISABLE VG
	LDA #LED1!LED2!COINLO
	STA OUTPUT	;LOW TRUE FOR LED'S
	LDA #0		;ZERO WORKING RAM (0-7FF)
	STA 1
	STA 2
	LDY #3
ZIPMEM:	LDA #0
	STA NY,1
	INY
	BNE ZIPMEM
;
	INC 2
	LDA 2
	EOR #8
	BNE ZIPMEM
;
;
; INITIALIZE LANGUAGES
;
	JSR INILIT
;
;
; PRESET DEBUG THROTTLE SINGL-STEP AT 1 (NORMAL)
;
	LDA #1
	STA DEBUG+2
	STA DEBUG+3
;
;
	LDA #80	;SET ATTRACT MODE
	STA ATRACT
;
;
; PRESET-COLOR 'RAM' LOOKUP TABLE
;
	LDX #1F
PCLRAM:	TXA
	LDA X,WHOCLR	;OBJECT BODY/WING COLORS
	STA X,OBJCLR
	DEX
	BPL PCLRAM
;
	LDA #0C8	;PRESET OUTPUT STATE
	STA OUTPUT
	STA XYSAVE
;
	LDA #10.
	STA RNGSIZ		;INITIALIZE WEB SIZE
;
; PRESET-RESUME SCORE TABLE ON POWER-ON
;
	LDX #0
	LDA #1
	STA TEMP1		;WILL BE INCREMENT
	STA TEMP3		;WILL BE CURRENT VALUE
	LDA #50	
	STA TEMP2		;INCREMENT
	STA TEMP4		;VALUE
10$:	LDA #0
	STA X,PSCORE+2		;10'S & 1'S
	LDA TEMP3
	STA X,PSCORE
	LDA TEMP4
	STA X,PSCORE+1
	CLC
	SED
	ADC TEMP2
	STA TEMP4
	LDA TEMP3
	ADC TEMP1
	STA TEMP3
	CLD
	INX
	INX
	INX
	CPX #75.
	BCC 10$
;
;
; VARY MAXIMUM STARTING WAVE VIA DIP SWITCH
;
	STA POKEY2+0B
	LDA POKEY2+8
	AND #3
	TAX
	LDA X,MXWAVE
	AND #0FC
	STA MAXRES
;
; MAKE THE PLAYER A SPIDER
;
	LDA #1
	STA OBJAUX
	JSR OURNAM	; PUT DEFAULT NAMES IN TABLE
;
; INITIALIZE GAME PLAY MODE
;
	STA RSTDOG	;RESET-WATCH DOG SO
			;DOESN'T TRIP BEFORE WE START
	JSR INISOU
	JSR GAMEP
	JSR KILWAV
;
; PRESET ONE-HERTZ COUNTDOWN
;
	LDA #246.
	STA ONEHZ
;
	CLI
;
;
; READ-IN EAROM
;
	LDA #0		;RESET BAD FLAG
	STA EABAD
	JSR REHIIN	;READ ALL FIELDS
WAITEA:	LDA EAFLG	;WAIT FOR XFER TO FINISH
	BNE WAITEA
;
;
; ONCE EAROM HAS BEEN READ-IN RE-ENABLE NORMAL
; IRQ PROCESSING VIA POWRON FLAG
;
	LDA #0		;RESET EAROM ZERO FLAG
	STA EAZFLG
	LDA #0AA
	STA POWRON
	.SBTTL CONTEXT SWITCHING STATE ROUTINES
;******************************************************************************
;
; AUTO DISPLAY STATE SEQUENCER
;
STATES:	STA RSTDOG
	BIT ATRACT	;IF IN ATTRACT WE HAVE SEQUENCING
	BPL NOTIME	;NOT ATTRACT
	LDA DSTATE	;OR IF IN ACCOUNTING SCREEN NO TIMER
	CMP #5
	BEQ NOTIME
;
; USE DTIME FOR # SECONDS PER MODE
; DTIME+1 AS INDEX TO DSHOWS FOR NEXT MODE
;
	LDA DTIME	;DECREMENTED AT 1 HZ
	BNE NOTIME	;NOT TIME FOR SWITCH
	JSR ZIPPER	;CLEAR WEBS FOR ATTRACT
	LDX DTIME+1	;INDEX TO NEXT
NXTMDE:	LDA X,DSHOWS	;GET NEXT DELAY AMOUNT
	BNE MSHOW	;NOT AT TABLE END
	LDX #0
	JMP NXTMDE	;RESET TO TABLE START
MSHOW:	STA DTIME	;#SECONDS IN THIS MODE
	LDA X,DSHOWS+1	;MODE NUMBER
	STA NSTATE
	INX
	INX
	STX DTIME+1
;
NOTIME:	LDA NSTATE	;NEW STATE REQUESTED?
	BEQ DOSTAE	;NOPE
	CMP DSTATE	;ALREADY DOING IT?
	BNE NEWSTA	;NOPE
	LDA #0
	STA NSTATE
	JMP DOSTAE
NEWSTA:	JSR WHOAVG	;HOLD VG
;
	LDA NSTATE	;GET NEW STATE
	STA DSTATE
	ASL
	TAX
	JSR CONFIG	;DO NEW STATE INITILIZATION
	LDA #0
	STA NSTATE
	JMP DOSTAE
;
; DO INITIALIZATION FOR NEW DISPLAY STATE
;
CONFIG:	LDA X,PSETS-1
	PHA
	LDA X,PSETS-2
	PHA
	RTS
;
; NSTATE=0 MEANS NO CHANGE OF STATE
;
PSETS:	.WORD DEMOP-1	;GAME MODE STATE 1
	.WORD LOGOP-1	;GAME LOGO STATE 2
	.WORD HSTAP-1	;SEE HS TABLE STATE 3
	.WORD IENTP-1	;ENTER INITIALS STATE 4
	.WORD ACNTP-1	;ACCOUNTING DISPLAY STATE 5
	.WORD PPLYP-1	;PLAYER X STATE 6
	.WORD SELMP-1	;SELECT STARTING WAVE SATE 7
;
DEMOP:	BIT ATRACT
	BPL NORSBG
	LDA #0
	STA WVTIME
	STA TAGGED	;RESET POINTS FOR EGGS
	STA BUGSHW	;BUG SEQUENCE
	STA WALKIN
NORSBG:	JMP GAMEP
;
; PERFORM CURRENT STATES BACKGROUND
;
DOSTAE:	LDA DSTATE
	ASL
	TAX
	LDA X,STATE-1
	PHA
	LDA X,STATE-2
	PHA
	RTS
;
; DYNAMIC DISPLAY STATE PROCESS LINKAGES
;
STATE:	.WORD DOIT-1	;GAME PLAY
	.WORD LOGOB-1	;GAME LOGO
	.WORD HSTAB-1	;SEE HS TABL
	.WORD IENTB-1	;ENTER INITIALS
	.WORD ACNTB-1	;ACCOUNTING
	.WORD PPLYB-1	;PLAYER X STATE 6
	.WORD SELMB-1	;SELECT STARTING WAVE
;
; ATTRACT MODE DISPLAY SEQUENCING TABLE
;
DSHOWS:	.BYTE 36.,1	;36 SECONDS OF GAME
	.BYTE 10.,2	;10 SECONDS OF LOGO
	.BYTE 10.,3	;10 SECS OF HS TABLE
	.BYTE 0		;END OF TABLE
;
;******************************************************************************
	.SBTTL PPLYP : PLAYER X DISPLAY
; ONLY SEEN IN TWO PLAYER GAME
PPLYP:	BIT ATRACT
	BMI DROP2X
	LDA NPLYRS
	BEQ DROP2X
	JSR FXTEXT
	LDX #MPLAYR
	JSR MESG
	LDA PLAYER
	CLC
	ADC #1
	JSR VGHEXZ
;
; DUMMY VECTOR TO DEFEAT SPOT KILLER
;
	JSR QCNTR
	LDA #0
	LDY #0
	JSR VGSTAT
	LDA #-50
	LDX #50
	JSR VGVTR1
	LDA #50
	LDX #-50
	JSR VGVTR1
	JSR VGRTSL
;
; PAUSE TO SHOW PLAYER X... GIVE TIME FOR OTHER GUY TO GET THERE
;
	LDA #3
	STA DTIME
;
; RENABLE DISPLAY LIST PROCESSING
;
LETRIP:	LDA #0
	STA HALTED
	STA GOVG
	STA HELPER
	RTS
;***********************************************************************
DROP2X:	PLA
	PLA
NOPLYM:	LDA #1
	STA NSTATE
	STA STGAME
	JMP NOTIME
;
PPLYB:	LDA DTIME	;TIME UP?
	BEQ NOPLYM	;YEP. PLAY THE GAME
	JMP FRAMED
;******************************************************************************
	.SBTTL LOGOP : GAME NAME DISPLAY INITIALIZATION
;
; LOGO GAME NAME DISPLAY PRESET ROUTINE
;
LOGOP:	LDAL VGRAM
	STA VGLIST	;USE FULL VGRAM
	LDAH VGRAM
	STA VGLIST+1
	JSR QCNTR
	LDY #0
	LDA #1
	JSR VGSCAL
	LDA #-50
	LDX #18
	JSR VGVTR1
	LDY #0
	LDA #0
	JSR VGSCAL
	LDA #0
	LDY #<0E0!ZRED>
	JSR VGSTAT
	LDAL LOGO1
	TAX
	LDAH LOGO1
	JSR VGJSRL
	JSR QCNTR
	LDY #0
	LDA #1
	JSR VGSCAL
	LDA #0A4
	LDX #-20
	JSR VGVTR1
	LDY #20
	LDA #0
	JSR VGSCAL
	LDA #0
	LDY #<0E0!ZRED>
	JSR VGSTAT
	LDAL LOGO2
	TAX
	LDAH LOGO2
	JSR VGJSRL
	LDY #0
	LDA #1
	JSR VGSCAL
	JSR QCNTR
	LDX #MATARI	;USE ATARI FOR TIME BEING
	JSR MESG
;
; SHOW # COINS PER PLAY
;
	LDA DIPD4	;GET COIN MODE
	AND #3
	TAX
	LDA X,MOD2TX	;CONVERT TO MESSAGE NUMBER
	TAX
	JSR MESG
	LDA BLIVES	;MAYBE NO BONUS IS POSSIBLE
	BEQ NBONUS	;CAN'T GIVE ONE
	LDX #MBOLIF	;BONUS EVERY 20,000
	JSR MESG
	LDA DIPB4	;OPTION SWITCHES
	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	CLC
	ADC #2	;20,000 MINIMUM
	JSR VGHEXZ
	LDA #4
	STA TEMP4
58$:	LDA #0
	CLC
	JSR VGHEXZ
	DEC TEMP4
	BNE 58$
NBONUS:	JSR VGHALT
	LDA #0
	STA HELPER
	STA HALTED
	STA GOVG
	RTS
MOD2TX:	.BYTE MCMOD2,MCMOD3,MCMODE,MCMOD1
FIXCMD:	.BYTE 2,3,0,1	;SWITCH TO COIN MODE LOOKUP
;******************************************************************************
	.SBTTL LOGOB : GAME LOGO DISPLAY MAINTENANCE
;
; LOG DISPLAY BACKGROUND
;
LOGOB:	JSR GOGAME	;START GAME MAYBE
	JMP FRAMED	;NOPE
;******************************************************************************
	.SBTTL HIGH-SCORE TABLE DISPLAY INITIALIZATION
;
; HIGH SCORE DISPLAY MODE PRESETS
;
HSTAP:	LDAL VGRAM
	STA VGLIST
	LDAH VGRAM
	STA VGLIST+1
	JSR SEETBL
	JSR VGHALT
	LDA #0
	STA HALTED
	STA GOVG
	STA HELPER
	RTS
;******************************************************************************
	.SBTTL INITIALS ENTRY DISPLAY INITIALIZATION
;
; HIGH SCORE INITIAL ENTRY PRESETS
;
IENTP:	LDA #0
	STA VGLIST
	STA IENTRY	;WHERE INITIALS GO
	LDA #JYMASK	;FIRE BUTTON DEBOUNCE
	STA DBOUNC
	LDAH VGRAM
	STA VGLIST+1
	JSR SEETBL
	LDX #MENTER	;ENTER INTIALS
	JSR MESG
	LDX #MPRMOV	;CHANGE W/KNOB
	JSR MESG
	LDX #MPRFIR	;FIRE TO ENTER
	JSR MESG
	JSR VGHALT
	LDA #0FF	;FLAG FOR RELEASE STICK BEFORE 1ST LETTER
	STA KNOB	;USED AS CHARACTER COUNTER
	LDA #0
	STA TBHD	;SLEW-SPEED TIMER
	STA HALTED
	STA GOVG
	STA HELPER
	STA NITBUG	;HOLDS LETTER COLOR FOR INITIALS
	LDA #60.	;HAS A MINUTE TO ENTER INITIALS
	STA DTIME
	RTS
;******************************************************************************
	.SBTTL HSTAB : HIGH SCORE TABLE DISPLAY MAINTENANCE
;
; HIGH SCORE DYNAMIC PORTION
;
HSTAB:	JSR GOGAME	;START GAME?
	JMP FRAMED	;NOPE
;******************************************************************************
	.SBTTL IENTB : ENTER INITIALS DISPLAY MAINTENANCE
;
; INITIALS ENTRY BACKGROUND
;1ST TASK IS TO UPDATE <KNOB> VIA MOVE-STICK
; TBHD IS USED AS SLEW RATE CONTROL
;
IENTB:	LDA DTIME	;TIMED OUT?
	BNE 10$		;STILL TIME TO ENTER THEM
	JMP DONITS
10$:	LDA #30.	;KEEP RESETTING DECAY TIMER
	STA RTIME
	INC FRMCNT
	LDA KNOB	;HANDS OF FIRESTICK AT END GAME YET?
	BPL TGAM	;HAS LET GO SINCE END GAME
	LDA FLAGS3
	AND #JYMASK	;MASK OF FIRESTICK
	EOR #JYMASK	;STICKS ARE LOW TRUE
	BEQ STIKIT
	JMP FRAMED
;
; RELEASE OF FIRESTICK AT GAME END
;
STIKIT:	STA DBOUNC
	LDA #1		;SHOW AN 'A' AS 1ST LETTER
	STA KNOB
TGAM:	LDA FRMCNT
	AND #3
	BNE NOTWN
	LDY #0		;HIGHLIGHT THE LINE
	LDA RANDOM
	AND #3
	TAX
	LDA X,COLETR
	STA NY,INTADR
	LDY #20.
	STA NY,INTADR
NOTWN:	LDA FLAGS2	;LEFT/RIGHT USED
	AND #JYMASK	;X X X X U D L R
	CMP #JYMASK	;MOVING THE STICK?
	BEQ SAMLTR	;NOPE
	TAY
	DEC TBHD	;TIME TO SLEW?
	BPL SAMLTR	;NOPE
	LDA #5		;SLEW RATE BETWEEN LETTERS
	STA TBHD
	TYA		;COLOR SELECTION?
	AND #<JYUP!JYDOWN>
	CMP #<JYUP!JYDOWN>
	BEQ NOTCLR	;NOT COLOR SELCET
	INC NITBUG
	AND #JYUP
	BNE 10$
	DEC NITBUG
	DEC NITBUG
10$:	LDA NITBUG
	AND #3
	STA NITBUG
NOTCLR:	TYA		;WHICH DOES HE WANT L OR R
	AND #<JYLEFT!JYRITE>	;LETTER SELECT OR JUST COLOR
	CMP #<JYLEFT!JYRITE>
	BEQ SAMLTR
	INC KNOB	;IN CASE HE WANTS R
	AND #JYRITE
	BEQ SAMLTR	;YEP
	DEC KNOB
	DEC KNOB
SAMLTR:	LDA KNOB
	AND #1F		;32 CHARACTERS DEFINED
	STA KNOB
	BEQ DBL	;0=BLANK
	ASL
	ADC #20.	;1='A'
DBL:	TAX
	LDY NITBUG	;GET COLOR CODE
	LDA Y,COLETR	;COLOR LOOKUP
	PHA
	LDA IENTRY
	ASL
	ASL
	CLC
	ADC #8	;POINT AT 1ST LETTER
	TAY
	PLA
	STA NY,INTADR	;COLOR STAT
	INY
	INY
	LDA X,VGMSGA
	STA NY,INTADR	;CHANGE JSRL TO LETTER
;
; NOW THAT WE'RE DISPLAYING THE RIGHT LETTER
; TEST FOR BUTTON
;
	JSR PUSHER	;CARRY=1 PUSHED&RELEASED
	BCS GOTLTR	;HE DID IT
TOMUCH:	JMP FRAMED
GOTLTR:	LDA KNOB	;CURRENT LETTER=RUB?
	CMP #1F
	BNE NORUB	;NOPE
	LDA IENTRY	;CAN WE BACK UP?
	BEQ TOMUCH	;NOPE
;
; SINCE WE'RE BACKING UP, BLANK CURRENT POSITION FIRST
;
	ASL
	ASL
	ADC #8
	TAY
	LDA VGMSGA	;BLANK
	STA NY,INTADR
	DEC IENTRY
	JMP FRAMED	;WE BACKED UP
NORUB:	LDA IENTRY
	CLC
	ADC INTIDX	;WHERE IN TABLE THESE GO
	TAX
	LDA NITBUG
	ASL
	ASL
	ASL
	ASL
	ASL
	ASL
	ORA KNOB
	STA X,HSTBL
	INC IENTRY
	LDA IENTRY
	CMP #3
	BEQ DONITS	;YEP DONE
	JMP FRAMED
DONITS:	LDA $TOUGH	;DON'T DO IT IN DEMO
	CMP #3
	BEQ 51$		;IN DEMO
	JSR WRHIIN	;SAVE TOP 3 IN EAROM
51$:	LDA #30.	;COUNT DOWN
	STA RTIME
	LDA NPLYRS	;WERE 2 FOLKS PLAYING?
	BEQ BONLES	;NOPE ONLY ONE TO ENTER INITIALS
	LDA PLAYER	;ALREADY DONE PLAYER 2?
	BNE BONLES	;YEP
	STA DSTATE	;FORCE RESTART OF WHOLE PROCESS
	JMP TOTHER	;TRY THE OTHER GUY
BONLES:	LDA #0		;CAN'T RESUME, SEE GAME NEXT
	STA DTIME	;FALL INTO NORMAL DISPALAY SEQUENCING
	STA DTIME+1
	STA STARTS
	LDA #80
	STA DSTATE	;FOOL HIM
	STA ATRACT
	LDA #1
	STA NSTATE
	JSR ZIPPER
	JMP NOTIME
;******************************************************************************
;
; RETURNS CARRY IF FIRE-STICK HAS BEEN MOVED & RELEASED
;
PUSHER:	LDA FLAGS3	;FINGER DOWN?
	AND #JYMASK
	EOR #JYMASK
	BEQ NOFNGR	;NOPE
	STA DBOUNC	;YEP
NOCRTS:	CLC
	RTS
NOFNGR:	LDA DBOUNC
	BEQ NOCRTS
	LDA #0
	STA DBOUNC
	SEC
	RTS
;******************************************************************************
;******************************************************************************
	.SBTTL ACNTP : ACCOUNTING DISPLAY INITIALIZATION
;
; ACCOUNTING SCREEN
; TOTAL GAMES, TOTAL COINS, TIME ON, GAME TIME
;
; USING SIMPLETON DOUBLE BUFFER TECHNIQUE
;
ACNTP:	LDA #2		;BUFFER AT 2000 OR 2400
	STA VGLIST
	LDA #20
	STA VGLIST+1
	INC FRMCNT	;WHICH ONE THIS TIME?
	LDA FRMCNT
	LSR
	BCC 99$		;USE 2000
	LDA #24		;USE 2400
	STA VGLIST+1
99$:	JSR QCNTR
	LDY #0
	LDA #1
	JSR VGSCAL
;	LDA #-20
;	LDX #20
;	JSR VGVTR1
;	LDY #<0E0!ZRED>
;	LDA #0
;	JSR VGSTAT
;
; CONVERT SECONDS ON
;
;	LDA SECOND
;	STA FOODY
;	LDA SECOND+1
;	STA FOODY+1
;	LDA SECOND+2
;	STA FOODX
;	JSR BINBCD
;	JSR SHWBCD
;	JSR QCNTR
;	LDA #-20
;	LDX #10
;	JSR VGVTR1
;	LDA GTIME
;	STA FOODY
;	LDA GTIME+1
;	STA FOODY+1
;	LDA GTIME+2
;	STA FOODX
;	JSR BINBCD
;	JSR SHWBCD
	JSR QCNTR
;
; IF EAROM IS BUSY... NO SELECTIONS POSSIBLE
;
	LDA EAFLG	;NZ MEANS BUSY
	ORA EAREQU	;BUSY OR QUEUD REQUESTS
	BNE 30$
	LDX #MTMSG1	;"START 1 AND FIRE"
	JSR MESG
	LDX #0		;CLEAR STARTS IF HE PRESSED IT
	LDA STARTS	;HAS HE PRESSED START?
	STX STARTS
	AND #STRT1	;PRESSED START 1?
	BEQ 10$		;NOPE
;
; START HAS BEEN PRESSED, IF FIRE WAS DOWN
; THEN GO TO THAT TEST
;
	LDA FLAGS3	;FIRE STICK PORT
	EOR #JYMASK
	AND #JYMASK
	BEQ 57$		;NO STICK
	LDA NITBUG
	AND #3
	ASL
	TAX
	JSR GOTEST
	JMP 20$
57$:	INC NITBUG
	LDA NITBUG
	AND #3
	STA NITBUG
10$:	LDA NITBUG
	TAX
	LDA X,33$	;LOOK UP WHICH
	TAX
	JSR MESG
	JMP 20$
33$:	.BYTE MTMSG2,MTMSG3,MTMSG4,MTMSG5
30$:	LDX #MTMSG6	;"EAROM BUSY"
	JSR MESG
	LDA #0		;HOLD OFF START BUTTON
	STA STARTS
20$:	LDX #MGAMZ	;GAMES PLAYED
	JSR MESG
	LDA GAMES
	STA FOODY
	LDA GAMES+1
	STA FOODY+1
	LDA #0
	STA FOODX
	JSR BINBCD
	JSR SHWBCD
;
; SHOW # COINS PER PLAY
;
	LDA DIPD4	;GET COIN MODE
	AND #3
	TAX
	LDA X,MOD2TX	;CONVERT TO MESSAGE NUMBER
	TAX
	JSR MESG
	LDA BLIVES	;MAYBE NO BONUS IS POSSIBLE
	BEQ XBONUS	;CAN'T GIVE ONE
	LDX #MBOLIF	;BONUS EVERY 20,000
	JSR MESG
	LDA DIPB4	;OPTION SWITCHES
	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	CLC
	ADC #2	;20,000 MINIMUM
	JSR VGHEXZ
	LDA #4
	STA TEMP4
58$:	LDA #0
	CLC
	JSR VGHEXZ
	DEC TEMP4
	BNE 58$
XBONUS:	LDX #MLISTR	;LIVES PER GAME
	JSR MESG
;
; DETERMINE STARTING LIVES FROM THE DIPS
;
	LDA DIPB4	;OPTION SWITCHES
	AND #0C
	LSR
	LSR
	ADC #3
	JSR VGHEXZ
	LDX #MMXSTR	;MAX START WAVE
	JSR MESG
	LDA DIPB4
	AND #3
	TAX
	LDA X,MXWAVE
	JSR HEXBCD
	PHA
	LSR
	LSR
	LSR
	LSR
	JSR VGHEXZ
	PLA
	AND #0F
	JSR VGHEXZ
;
; SHOW BONUS ADDER AND MECH MULTIPLIER
;
	LDX #MTMSG7	;BONUS ADDER 3 BITS
	JSR MESG
	LDA DIPD4
	AND #0E0
	LSR
	LSR
	LSR
	LSR
	LSR
	JSR VGHEXZ
	LDX #MTMSG8	;LEFT MECH X
	JSR MESG
	LDA DIPD4
	AND #10
	LSR
	LSR
	LSR
	LSR
	CLC
	ADC #1
	JSR VGHEXZ
	LDX #MTMSG9	;RIGHT MECH X
	JSR MESG
	LDA DIPD4
	LSR
	LSR
	AND #3
	CLC
	ADC #1
	CMP #1
	BEQ 59$
	CLC
	ADC #2
59$:	JSR VGHEXZ
;
;
; COMPUTE AVERAGE GAME TIME
;
	LDA GAMES
	ORA GAMES+1
	BNE 11$
	JMP SEEDIF	;NO GAMES YET
11$:	LDX #MAVGTM	;AVERAGE GAME TIME
	JSR MESG
	LDA GTIME	;LSB
	STA TEMP1
	LDA GTIME+1
	STA TEMP2
	LDA GTIME+2
	STA TEMP3
	LDA #0		;AVERAGE TIME
	STA FOODY
	STA FOODY+1
10$:	INC FOODY
	BNE 6$
	INC FOODY+1
6$:	LDA TEMP1
	SEC
	SBC GAMES
	STA TEMP1
	LDA TEMP2
	SBC GAMES+1
	STA TEMP2
	LDA TEMP3
	SBC #0
	STA TEMP3
	BPL 10$
	LDA #0
	STA FOODX
	JSR BINBCD
	LDY #0
	LDA TEMP2
	JSR FDIGIT
	LDA TEMP1
	JSR PDIGIT
	DEY
	JSR VGADD
;
; DISPLAY GAME DIFFICULTY
;
SEEDIF:	LDA DIPB4
	AND #30
	LSR
	LSR
	LSR
	LSR
	TAX
	LDA X,PLYMOD
	TAX
	JSR MESG
84$:	LDA FLAGS1
	AND #VGHLT
	BEQ 84$		;WAIT FOR CURRENT FRAME DONE
	JSR WHOAVG	;HALT THE GENERATOR
	LDA #2		;LSB OF LIST ADDRESS FOR JMPL TO START OF LIST
	STA TEMP1
	LDA #20		;IN CASE 1ST BUFFER
	STA TEMP2
	LDA FRMCNT
	LSR
	BCC 45$
	LDA #24		;JMPL TO 2402 AT START
	STA TEMP2
45$:	JSR VGHALT
	LDA #0
	STA VGLIST
	LDA #20
	STA VGLIST+1
	LDX TEMP1
	LDA TEMP2
	JSR VGJMPL
	LDA #0
	STA GOVG
	STA HALTED
	STA HELPER
	RTS
;
GOTEST:	LDA X,TESTS+1
	PHA
	LDA X,TESTS
	PHA
	RTS
TESTS:	.WORD SELFT-1	;DESTRUCTIVE SELF TEST
	.WORD CLRSCR-1	;CLEAR SCORES
	.WORD CLRTIM-1	;CLEAR GAME TIMES
	.WORD CLRBTH-1	;CLEAR TIMES AND SCORES
;
CLRSCR:	JSR ZEETBL
	JSR ALLNAM
	JSR WRHIIN
	RTS
CLRTIM:	SEI
	LDA #0
	STA GTIME
	STA GTIME+1
	STA GTIME+2
	STA GAMES
	STA GAMES+1
	CLI
	JSR WRBOOK
	RTS
CLRBTH:	JSR CLRSCR
	JSR CLRTIM
	RTS
PLYMOD:	.BYTE MDEASY,MDMED,MDHARD,MDEMO
;******************************************************************************
	.SBTTL ACNTB : ACCOUNTING INFORMATION DISPLAY MAINTENANCE
;
; FIELD-TEST ACCOUNTING BACKGROUND
;
ACNTB:	JSR GOGAME
	JSR ACNTP
;******************************************************************************
;
; COMMON WAIT FOR FRAME END ROUTINE
;
FRAMED:	LDA HALTED
	BNE ITZOFF
	LDA FLAGS1	;VG ALREADY HALTED?
	AND #VGHLT
	BNE BEATIT	;YEP- RESTART
	LDA #0		;CLEAR INTERRUPT FLAG
	STA POWRON
PAUSE:	LDA #0AA
	CMP POWRON
	BNE PAUSE
ITZOFF:	JMP STATES
BEATIT:	STA GOVG
	JMP STATES
;******************************************************************************
;
; CONVERT 24 BIT BINARY IN FOODY,+1,FOODX
; (FOODY = LSB) TO 8 DIGIT BCD IN TEMP
; 1,2,3,4 TEMP1 = LSB
;
BINBCD:	LDA #0	;PRESET BCD VALUE TO 0
	STA TEMP1	;LSB
	STA TEMP2
	STA TEMP3
	STA TEMP4	;MSB
	LDY #18		;24 BIT NUMBER
5$:	CLC
	SED
	LDA TEMP1
	ADC TEMP1
	STA TEMP1
	LDA TEMP2
	ADC TEMP2
	STA TEMP2
	LDA TEMP3
	ADC TEMP3
	STA TEMP3
	LDA TEMP4
	ADC TEMP4
	STA TEMP4
	CLD
	ASL FOODY
	ROL FOODY+1
	ROL FOODX
	LDA TEMP1
	ADC #0
	STA TEMP1
	DEY
	BNE 5$
	RTS
;
; DISPLAYS 8 DIGIT DECIMAL AT CURRENT LOC
;
SHWBCD:	LDY #0
	LDA TEMP4
	JSR FDIGIT
	LDA TEMP3
	JSR PDIGIT
	LDA TEMP2
	JSR PDIGIT
	LDA TEMP1
	JSR PDIGIT
	DEY
	JMP VGADD
;******************************************************************************
;
; IF CREDITS ACTIVE - FLASH START BUTTON
;
; THIS ROUTINE USED BY ANY BACKGROUND
; RETURNS CARRY CLEAR IF NO START PRESSED
; CARRY SET IF START PRESSED
;
GOGAME:	BIT ATRACT	;UNLESS IN ATRACT, NO ACCOUNTING TEST
	BPL TSTRT	;NOT ATTRACT
	LDA FLAGS1	;TEST SELF-TEST SWITCH
	AND #SELF
	BEQ GOCOUN	;HE'S ASKING FOR IT
	LDA DSTATE	;WERE WE THERE?
	CMP #5
	BNE TSTRT	;NOPE
	LDA #0		;SET GAME MODE
	STA DTIME+1
	STA DTIME
	STA STOPVG
	STA HALTED	;TERMINATE DUBBLE BUFFER
	STA $$CRDT	;SEFT TEST ERASES COINS
	STA $CNCT	;AND 1/2 COINS TOO
	LDA #1		;SET GAME PLAY MODE
	STA NSTATE
	CLC
	RTS
GOCOUN:	LDA #5
	STA NSTATE
;
; VARY MAXIMUM STARTING WAVE VIA DIP SWITCH
;
	STA POKEY2+0B
	LDA POKEY2+8
	AND #3
	TAX
	LDA X,MXWAVE
	AND #0FC
	STA MAXRES
	CLC
	RTS
;
; DETERMINE BONUS INTERVAL FROM THE DIPS
;
TSTRT:	LDA DIPB4	;OPTION SWITCHES
	AND #0C0	;C0=NO BONUS
	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	CLC
	ADC #2		;20,000 MINIMUM
	CMP #5		;3 = NOBONUS
	BNE 48$
	LDA #0
48$:	STA BLIVES
;
; IF FREE PLAY, LET COINS FALL THRU CHUTE
; SELECT COIN MODE
;
	LDA DIPD4	;OPTION SWITCHES
	AND #3
	TAX
	EOR DIPD4	;GET BACK BONUS AND MULTIPLIERS
	ORA X,FIXCMD
	STA $CMODE
	AND #3
	BNE NOLOCK
	SEI
	LDA XYSAVE
	AND #0F7	;0 MEANS COINS>REJECT
	STA XYSAVE
	STA OUTPUT
	CLI
	JMP LOCKER
NOLOCK:	SEI
	LDA XYSAVE
	ORA #8		;ENABLE COIN MECHS
	STA XYSAVE
	STA OUTPUT
	CLI
;
; IF IN FREE PLAY, FAKE 2 CREDITS
;
LOCKER:	LDA $CMODE
	AND #3
	BNE 39$		;NOT FREE PLAY
	LDA #2
	JMP WAMPUM
39$:	LDA $$CRDT	;ANY MONEY ALIVE?
	BNE WAMPUM	;YEP
;
; NO MONEY LEFT : MAKE SURE LEDS ALL OFF
;
	LDA XYSAVE
	ORA #<LED1!LED2!INVRTX!INVRTY>
	STA XYSAVE
	STA OUTPUT
	CLC
	RTS		;NO START
WAMPUM:	BIT ATRACT	;MUST BE IN ATRACT TO START
	BMI TWINKY	;YEP
	CLC
	RTS
TWINKY:	LDX #<LED1?0FF>	;IN CASE ONLY 1 COIN LEFT
	CMP #2		;ENOUGH MONEY IN FOR 2 PLAYER START?
	BCC 10$		;NOPE ONLY 1 LEFT
	LDX #<<LED1!LED2>?0FF>	;BOTH LEDS ON MASK
10$:	SEI		;DISABLE INTERRUPT BRIEFLY
	LDA XYSAVE	;FORCE BOTH OFF FOR A MOMENT
	ORA #<LED1!LED2>
	STA XYSAVE
	LDA ONEHZ
	AND #20
	BEQ 20$		;LEAVE OFF FOR NOW
	TXA
	AND XYSAVE
	STA XYSAVE
20$:	LDA XYSAVE
	STA OUTPUT
	CLI		;RE-ENABLE INTERRUPTIONS
	LDA $CMODE	;IF FREE PLAY CAN ALWAYS PLAY EITHER
	AND #3
	BEQ 97$
	LDA $$CRDT	;CAN HE PRESS EITHER?
	CMP #2
	BCC PL1ONL	;NOPE
97$:	LDA STARTS
	BNE STR102	;STARTING 1 OR 2 PLAYER GAME
NOGAME:	CLC
	LDA #0
	STA STARTS
	RTS
STR102:	SEI
	LDX #0		;CLEAR START FLAGS
	STX STARTS
	CLI
	AND #STRT1	;1 PLAYER?
	BNE STRGM1	;YEP
	LDA #1		;FLAG THAT P2 HASN'T PICKED STARTING WAVE YET
	STA P2NOTY
	STA NPLYRS	;NZ INDICATES 2 PLAYERS
	LDA $CMODE	;CAN'T TAKE MONEY ON FREE PLAY
	AND #3
	BEQ 5$
	DEC $$CRDT	;TAKE ONE CREDIT
5$:	INC GAMES	;INCREMENT # GAMES PLAYED
	BNE 10$
	INC GAMES+1
10$:	JMP STGM	;START 2 PLAYER GAME
PL1ONL:	LDA STARTS
	AND #STRT1
	BEQ NOGAME	;NOT PRESSING 1 PLAYER START
STRGM1:	SEI
	LDA #0
	STA STARTS
	CLI
	STA NPLYRS	;0 MEANS ONE PLAYER GAME
STGM:	LDA #0
	STA PLAYER
	LDA $CMODE	;CAN TAKE CREDITS ON FREE PLAY
	AND #3
	BEQ 5$
	DEC $$CRDT	;TAKE ANOTHER CREDIT
5$:	INC GAMES
	BNE 10$
	INC GAMES+1
10$:	PLA		;DISCARD RETURN ADDRESS
	PLA
;
; ONCE GAME IS STARTED... FLUSH FRACTIONAL BONUS COINS
;
	LDA #0
	STA $BCCNT
	STA $BC
;
; SET $TOUGH FOR GAME DIFFICULTY
; 0:EASY 1:MEDIUM 2:HARD 3:DEMO
; ALSO SET BULLET SPEED
; MUST BE ON FREE PLAY AND NO BONUS COINS
;
;
	LDA DIPB4	;GET DIFFICULTY SETTING FROM DIPS
	AND #30		;ISOLATE THE CORRECT BITS
	LSR
	LSR
	LSR
	LSR
	STA $TOUGH
	CMP #3
	BNE 44$		;NOT ASKING FOR DEMO
	LDA $CMODE	;MAKE SURE FREE AND NO BONUS
	AND #0E3
	BEQ 44$		;HE CAN DO IT
	LDA #2
	STA $TOUGH
;
44$:	LDA #0		;NO LONGER IN ATTRACT
	STA SCORE
	STA SCORE+1
	STA SCORE+2
;
	LDA #7		;SELECT WAVE STATE
	STA NSTATE
;
; DETERMINE STARTING LIVES FROM THE DIPS
;
	LDA DIPB4	;OPTION SWITCHES
	AND #0C
	LSR
	LSR
	ADC #2
	STA LIVES
	JSR ZIPPER	;CLEAR WEBS
	LDA #4		;PARADE SPEED
	STA SPEEDY
	LDA #0FF
	STA EVENTS
	LDA #0
	STA PRVMSB
	STA ATRACT	;NO LONGER ATRACT
	STA STARTS
	LDA #3
	STA RESPED	;INITIAL PLAYER SPEED
	JSR INISOU
;
; DUPLICATE BUFFER FOR 2ND PLAYER IF THERE IS ONE
;
	LDX #0F
	LDA #0
99$:	STA X,BADASS
	DEX
	BPL 99$
;
; MAKE SURE ALL PREVIOUS BODIES NOW DEAD
;
	LDX #10
OFB4NW:	LDA #DEAD
	STA X,OBJFLG
	CPX #50		;CLEAR SAVED BUFFERS TOO
	BCC 10$
	STA X,P1OBJS-50
	STA X,P2OBJS-50
10$:	TXA
	CLC
	ADC #10
	TAX
	BNE OFB4NW
;
	LDY #SAVSIZ
	LDX #0
DUPB4G:	LDA X,STRSAV
	STA X,GSAVE2
	STA X,GSAVE1
	INX
	DEY
	BNE DUPB4G
;
NO2DUP:	JMP NOTIME
;
;******************************************************************************
	.SBTTL DOIT : GAME PLAY DISPLAY MAINTENANCE
;
; GAME PLAY BACKGROUND
;
DOIT:	LDA STGAME	;PLAYER STARTING
	BNE STRTIT
	LDA ATRACT
	BPL CONATR
	JSR GOGAME
	LDA OBJFLG
	CMP #DEAD
	BNE CONATR	;CONTINUE ATTRACT
	LDA #0FF
	STA EVENTS
	LDA #0
	STA BINWAV
	LDA #4
	STA SPEEDY
	JMP DOGAME
CONATR:	JMP PLAYIT	;ATRACT PLAY
;******************************************************************************
;
; S T A R T   A   G A M E
;
;******************************************************************************
STRTIT:	LDA #0
	STA STGAME
;
DOGAME:	LDA #ZBLACK
	STA OBJVGC
	STA OBJVGC+6	;TURN PLAYER OFF
	LDA #DYING
	STA OBJFLG
;
;
; RESET PARADE FLAGS
;
	LDA #0
	STA PARADE
;
	LDA #8
	ORA SDFLAG
	STA SDFLAG
	JSR DPROC
;
	LDA #0		;SHOW OK FOR PLAYER
	STA OBJFLG
	JMP MOR2GO
	.SBTTL GAME MAIN LOOP
;
PLAYIT:	LDA #0
	STA POWRON
KILTIM:	LDA POWRON
	CMP #0AA
	BNE KILTIM
	JSR WAVE
;
; REPEATEDLY SET BOTH MUSIC CHANNELS AT SAME SPEED
;
;	LDA ORATE1
;	CLC
;	ADC #0
;	STA ORATE1
;	STA ORATE2
;
; DEBUG: IF <DEBUG> NZ SINGLE STEP
; ONE FRAME AT A TIME VIA PLAYER 2
;
; DEBUG+2 = THROTTLE PRESET (1=NORMAL)
; DEBUG+3 = THROTTLE TIMER
;
;
	DEC DEBUG+3
	BNE PLAYIT
	LDA DEBUG+2
	STA DEBUG+3
;
	LDA DEBUG
	BEQ GOSHOW
	LDA FLAGS3	;USE PLAYER2 FOR STEP
	AND #STRT2
	TAY
	EOR DEBUG+1
	STY DEBUG+1
	BEQ PLAYIT
	TYA
	BEQ PLAYIT
;
GOSHOW:	INC FRMCNT	;INCREMENT FRAME COUNTER
	LDA FRMCNT
	AND #1
	BNE NOTEXT
	JSR TEXT	;SHOW MESSAGES
;
; DO ANY SPECIAL DISPLAY PROCESSING
;
NOTEXT:	JSR SEEOBJ
;
; INTRODUCE NEW ONES & TEST FOR END OF WAVE
;
	JSR DPROC		;ADD HOSTILES
;
; PROCESS BAD GUYS AND GOOD GUY INTELLIGENCE
; THIS INCLUDES PLAYER SHOOTING
;
	STA RSTDOG
	JSR SMART
	STA RSTDOG
;
; COLLISION TESTS...
;
	LDA #0
	STA HITS
	STA HITTER
;
	LDY #40	;PLAYER VS MSL 4 AND ALL BAD
	JSR CHEAT
	JSR MAKEIT
	LDA DIED
	BEQ NXTCOL	;STILL ALIVE
;
; TURN OFF BULLETS SO WE SEE WHO KILLED US
;
	LDX #10
5$:	LDA #DEAD
	STA X,OBJFLG
	TXA
	CLC
	ADC #10
	TAX
	CMP #50
	BCC 5$
;
	LDA #0		;RESET WAVE VCB INTRO TIMER
	STA WVTIME
	LDA OBJFLG
	CMP #DEAD
	BNE 10$
	JMP DEATH	;PLAYER HAS DIED
;
; SET-UP FOR PLAYER DEATH SEQUENCE
;
10$:	LDA #DYING
	STA OBJFLG
	STA NITBUG	;FLAG EGGS NOT TO GROW
			;AND VCB/FFF EXITS
;
NXTCOL:	LDA #0
	STA HITTER
NWBHT:	LDA HITTER
	CLC
	ADC #10
	CMP #50		;ALL WEBS TESTED?
	BNE MOR2HT	;NOPE
	JMP TAGEM
MOR2HT:	STA HITTER
	LDY #50
	JSR SMASH
	JSR MAKEIT
	JMP NWBHT
;
TAGEM:	LDA #50
WHTDUN:	STA HITTER
	CLC
	ADC #10
	BCC MRSMSH
	JMP STATES
MRSMSH:	TAY
	JSR SMASH
	JSR MAKEIT
	LDA WRKOBJ
	CLC
	ADC #10
	JMP WHTDUN
;
;
;TURN OFF ALL HOSTILES
;FOR INITIALLY STARTING GAME
;
KILWAV:	LDY #10
;
ALLDIE:	LDA #DEAD
	STA Y,OBJFLG
	TYA
	CLC
	ADC #10
	TAY
	BNE ALLDIE
	RTS
;
ATTRCT:
MOR2GO:	LDA #0
	STA WALKIN
	BIT ATRACT
	BMI 3$
	INC WALKIN
;
; POSITION PLAYER OF THE BONUS LIVES
;
3$:	LDA #<0A0+ZGREEN>	;GREEN SPIDER RUNS IN
	STA OBJCLR+2
	STA OBJCLR+3
	LDA #0
	STA OBJHDG
	STA DIED
	STA OBJABY
	STA OBJABX
	LDA #64
	STA OBJABY+1
;
; PUT GREEN SPIDER IN RIGHT PLACE FOR WALKIN
;
	LDA NPLYRS
	BEQ 5$
	LDA PLAYER
	BEQ 5$
	LDA #64
	STA OBJABX+1
	JMP 7$
5$:	LDA #0CC
	STA OBJABX+1
7$:	JSR LITEM	;LIGHT UP REMAINING LIVES
	JMP FRAMED
CHKSM4::	.WORD SUMS4	;CHECKSUM FOR 9000-9FFF
;
;***********************************************************************
	.SBTTL PLAYER BITES THE BIG ONE
;
; DEATH - LOSS OF LIFE FOR THE PLAYER
;
DEATH:	LDA #0
	STA OBJFLG
	STA NEGGS	;RESET EGG & TAGGED COUNTERS
	STA TAGGED
	STA OBJHDG
	STA BADGUY
	STA CARCAS
	STA ACTIVE
;
; IF DIED IN PARADE WAVE, CLEAR BADASS TO NO
; NO MORE T-BUGS APPEAR
;
	LDA PARADE	;IN PARADE WAVE?
	BEQ NOSWAT	;NOPE
	LDX #0F
SWATEM:	LDA #0
	STA X,BADASS
	DEX
	BPL SWATEM
	LDA #0
	STA PARADE
;
NOSWAT:	LDA OBJAUX	;CLEAR PLAYER NO-MOVE
	AND #0EF
	STA OBJAUX
;
	BIT ATRACT
	BPL 5$
	JMP ATTRCT
5$:	DEC LIVES	;ONE MORE LIFE GONE
	BPL NOMSGS
;
; IF THAT'S IT PAUSE WHILE WE SHOW GAME OVER
;
	LDA #1
	STA HALTED
	STA STOPVG
	JSR FXTEXT
	LDA #-2
	CLC
	ADC VGLIST
	STA VGLIST
	LDA VGLIST+1
	ADC #0FF
	STA VGLIST+1
	LDX #MGAMOV
	JSR MESG
	LDA NPLYRS
	BEQ NOWHCD
	LDX #MPLAYR
	JSR MESG
	LDA PLAYER
	CLC
	ADC #1
	JSR VGHEXZ
;
; SHOW THE WAVE HE DIED UPON
;
NOWHCD:	LDX #MLEVEL	;SEE "LEVEL "
	JSR MESG
	LDA BINWAV
	CLC
	ADC #1
	JSR HEXBCD
	PHA
	LSR
	LSR
	LSR
	LSR
	SEC
	JSR VGHEXZ
	PLA
	AND #0F
	JSR VGHEXZ
	JSR VGRTSL
	LDA #3
	STA DTIME
SEEEND:	JSR LETRIP
TWIDLE:	LDA FLAGS1
	AND #VGHLT
	BNE STAHPT
	LDA #0
	STA POWRON
WAIYT:	LDA #0AA
	CMP POWRON
	BNE WAIYT
STAHPT:	LDA DTIME
	BNE SEEEND
;
; SAVE CURRENT PLAYERS STATE IN GSAVE1 OR GSAVE2
;
NOMSGS:	LDAL STRSAV	;START OF SAVE AREA
	STA FROM
	LDAH STRSAV
	STA FROM+1
	LDA NPLYRS	;DOING 2 PLAYERS?
	BEQ 10$		;NOPE, SAVE IN PLAYER 1 BUFFER
	LDA PLAYER	;DOING 2ND PLAYER
	BNE 20$		;YEP USE BUFFER 2
10$:	LDAL GSAVE1	;SAVE CURRENT PLAYER STATE IN BUFFER 1
	STA TO
	LDAH GSAVE1
	STA TO+1
;
; SAVE OPPONENTS
;
	LDX #0
11$:	LDA X,OBJFLG+50
	STA X,P1OBJS
	INX
	CPX #0B0
	BNE 11$
	JMP STATSV
20$:	LDAL GSAVE2	;SAVE CURRENT PLAYER IN BUFFER 2
	STA TO
	LDAH GSAVE2
	STA TO+1
	LDX #0
21$:	LDA X,OBJFLG+50
	STA X,P2OBJS
	INX
	CPX #0B0
	BNE 21$
STATSV:	LDX #SAVSIZ	;# BYTES TO BE SAVED
	JSR MEMCPY
;
; NO WE'VE SAVED CURRENT PLAYERS STATE, DO WE NEED TO SWITCH?
;
	LDA NPLYRS	;DOING 2 PLAYER MODE?
	BNE DUE2	;YEP
	JMP ENDITX	;NOPE, ANY LIVES LEFT?
DUE2:	LDA PLAYER
	BNE 10$		;WAS DOING P2, P1 HAVE ANY LIVES LEFT?
	LDA GSAVE2+LIFE	;PLAYER 2 HAVE ANYTHING IN RESERVE?
	BMI ENDITX	;NOPE, NO STATE CHANGE
	LDAL GSAVE2	;RESTORE PLAYER 2
	STA FROM
	LDAH GSAVE2
	STA FROM+1
	JMP OTRPLY	;RESTORE THE OTHER GUY
10$:	LDA GSAVE1+LIFE	;WASE DOING P2, P1 ANYTHING LEFT?
	BMI ENDITX	;NOPE
	LDAL GSAVE1
	STA FROM
	LDAH GSAVE1
	STA FROM+1
OTRPLY:	LDX #SAVSIZ	;#BYTES TO RESTORE
	LDAL STRSAV	;RESTORE TO CURRENT
	STA TO
	LDAH STRSAV
	STA TO+1
	JSR MEMCPY
	LDA #0FF	;SELECT OTHER PLAYER
	EOR PLAYER
	AND #1
	STA PLAYER
;
; RESTORE EGGS AND $ TO CURRENT PLAYER
;
	LDX #0
	LDA NPLYRS
	BEQ 11$
	LDA PLAYER
	BNE 21$		;RESTORE PLAYER 2 OPPONENTS
11$:	LDA X,P1OBJS
	STA X,OBJFLG+50
	INX
	CPX #0B0
	BNE 11$
	JMP 30$
21$:	LDA X,P2OBJS
	STA X,OBJFLG+50
	INX
	CPX #0B0
	BNE 21$
30$:	LDA PLAYER
	BEQ ENDITX	;ABOUT TO DO PLAYER 1
	LDA P2NOTY	;HAS PLAYER 2 PICKED HIS WAVE YET?
	BEQ ENDITX	;YEP
	LDA GSAVE2+RBIN	;GET HIS MAX STARTING WAVE NUMBER
	STA RESBIN
	STA WAVNUM
	LDA #0
	STA P2NOTY
	LDA #7		;GO TO SELECT WAVE STATE FIRST
	STA NSTATE
	LDA #30.
	STA DTIME
	JMP NOTIME
;
; DOES EITHER PLAYER HAVE ANYTHING LEFT?
;
ENDITX:	LDA NPLYRS
	BNE 9$
	LDA GSAVE1+LIFE
	BPL 10$
	JMP TAPS
9$:	LDA GSAVE1+LIFE
	BPL 10$
	LDA GSAVE2+LIFE
	BPL 10$
	JMP TAPS
;
; TIME FOR OTHER PLAYER TO GO, SO KILL OFF
; EVERYTHING BUT EGGS OR CARRION
;
10$:	LDX #10
86$:	LDA X,OBJAUX
	AND #7
	CMP #3		;3 FOR EGGS OR GRUB
	BNE 68$		;KILL IT
	LDA X,OBJFLG
	AND #2
	BEQ 76$		;STILL ALIVE
68$:	LDA #DEAD
	STA X,OBJFLG
76$:	TXA
	CLC
	ADC #10
	TAX
	BNE 86$
	LDA #6		;GO TO PLAYER X DISPLAY
	STA NSTATE
	JMP NOTIME
;
; BOTH PLAYERS ARE NOW DEAD FOR GOOD
;
TAPS:	LDA $TOUGH	;DON'T WRITE IN DEMO MODE
	CMP #3
	BEQ 88$
	JSR WRBOOK	;WRITE GAME TIMES
88$:	LDA #0
	STA PLAYER	;SO FINDHS USES CORRECT SCORE
	LDA GSAVE1+SCOR
	STA SCORE
	LDA GSAVE1+SCOR+1
	STA SCORE+1
	LDA GSAVE1+SCOR+2
	STA SCORE+2
	LDA GSAVE1+SWAVE
	STA BINWAV
;
; DETERMINE IF HE (THEY) CAN RESUME, IF SO WHAT BONUS WILL BE
;
	LDA GSAVE1+SWAVE
	STA RESBIN
	LDX NPLYRS
	BEQ P1BGR
	LDA RESBIN
	CMP GSAVE2+SWAVE
	BCS P1BGR
	LDA GSAVE2+SWAVE	;USE THE HIGHEST WAVE REACHED
P1BGR:	CMP MAXRES		;EITHER BETTER THAN DEFAULT
	BCC 3$		;CURRENT LT MAX, DEC MAX
	BEQ 3$		;CURRENT EQ MAX DEC MAX
	JMP 5$
3$:	LDA #13.
	STA TEMP	;13 MAX WAVE
	LDA DIPB4
	AND #3		;DETERMINE MAX
	TAX
	LDA MAXRES
; NEVER BACK OFF LESS THAN 13 OR 21 DEPENDING ON DIPS
;
	CMP X,MXWAVE		;SO BACK DOWN ONE
	BCC 10$
	SEC
	SBC #4
5$:	AND #0FC
	STA MAXRES
10$:	STA RESBIN
	STA GSAVE1+RBIN	;FOR 1ST PLAYER RESTART NEXT TIME
	STA GSAVE2+RBIN	;FOR 2ND PLAYER RESTART NEXT TIME
OTHRHS:	JSR FINDHS	;SCAN HS TABLE FOR A WINNER
;
; FOR NOW... IF WE MADE THE CHARTS UPDATE
; EAROM
;
	LDA #0
	STA STARTS
	LDA #80		;NOW IN ATTRACT MODE
	STA ATRACT
	LDA NSTATE	;INITIALS IS STATE 4
	CMP #4		;INDICATING WE MADE THE CHARTS
	BNE TUFLUK	;DIDN'T MAKE IT, LET HIM RESUME THO
	JMP NOTIME
;
; PLAYER 1 DID NOT MAKE THE GRADE, IF 2 PLAYER DID OTHER GUY?
;
TUFLUK:	LDA NPLYRS
	BEQ N2NDG
	LDA PLAYER
	BNE N2NDG	;ALREADY TRIED PLAYER 2 NEITHER MADE IT
TOTHER:	LDA #1
	STA PLAYER	;SO FINDHS USES CORRECT SCORE
	LDA GSAVE2+SCOR
	STA SCORE
	LDA GSAVE2+SCOR+1
	STA SCORE+1
	LDA GSAVE2+SCOR+2
	STA SCORE+2
	LDA GSAVE2+SWAVE
	STA BINWAV
	JMP OTHRHS
N2NDG:	LDA #30.	;SET RESUME TIMEOUT
	STA RTIME
	LDA #0
	STA DSTATE
	STA DTIME
	STA DTIME+1
	STA STARTS
	LDA #80
	STA ATRACT	;NOW IN ATTRACT
	JMP STATES
;
; DIPS SWITCH TO MAX START WAVE LOOKUP
;
MXWAVE:	.BYTE 13.,21.,37.,53.
; DISABLE INTERRUPTS WHILE WE STOP VG
;
WHOAVG:	SEI
	LDA #1
	STA HALTED
	STA STOPVG
32$:	LDA FLAGS1	;WAIT FOR IT TO STOP
	AND #VGHLT
	BEQ 32$
	CLI
	RTS
;
;
;***********************************************************************
;
; LIGHT UP RESERVE LIVES FOR APPROPRIATE PLAYER
;
LITEM:	BIT ATRACT	;IF ATTRACT NO SEE LIVES
	BMI NOPEEK
	LDA NPLYRS	;2 PLAYERS?
	BEQ LIT1ST	;NOPE, LIGHT UP PLAYER 1
	LDA #<0E0!ZRED>
	LDY #0
	STA NY,L2VGAL
	LDA #ZBLACK
	LDY #6
	LDX GSAVE2+LIFE	;IF NONE LEFT LEAVE COLOR OFF
	BMI 5$		;0 IS ALSO ZIP INTENSITY WHITE
	LDA #<0E0!ZWHITE>
5$:	STA NY,L2VGAL	;LIVES DIGIT
	LDA PLAYER	;IF PLAYER 1 UP THEN PLAYER 2 IS +2
	BNE 10$		;PLAYER 2 UP
	LDA GSAVE2+LIFE
	CLC
	ADC #2
	JMP 15$
10$:	LDA GSAVE2+LIFE
	CLC
	ADC #1
15$:	ASL
	TAX
	LDA X,VGMSGA
	LDY #8
	STA NY,L2VGAL
LIT1ST:	LDA #<0E0!ZRED>
	LDY #0
	STA NY,L1VGAL
	LDY #6
	LDA #ZBLACK
	LDX GSAVE1+LIFE	;IF NONE LEFT LEAVE COLOR OFF
	BMI 5$		;0 IS ALSO ZIP INTENSITY WHITE
	LDA #<0E0!ZWHITE>
5$:	STA NY,L1VGAL	;LIVES DIGIT
	LDA NPLYRS
	BEQ 10$
	LDA PLAYER
	BEQ 10$
	LDA GSAVE1+LIFE
	CLC
	ADC #2
	JMP 15$
10$:	LDA GSAVE1+LIFE
	CLC
	ADC #1
15$:	ASL
	TAX
	LDA X,VGMSGA
	LDY #8
	STA NY,L1VGAL
NOPEEK:	RTS
FXTEXT:	LDAL VGRAM	;ESTABLISH VGLIST AT START OF AVG RAM
	STA VGLIST
	LDAH VGRAM
	STA VGLIST+1
;
	JSR QCNTR
;
	LDA #1
	JSR VGSCA1	;FULL SCALE AGAIN
;
; LINK TO TEXT BUFFER AT 2400
;
	LDAH VGRAM
	CLC
	ADC #4
	LDX #0
	JSR VGJSRL
	JSR VGHALT
;
; SET MSGADR FOR TEXT ROUTINES AT 2400
;
	LDAL VGRAM
	STA MSGADR
	STA VGLIST
	LDAH VGRAM
	CLC
	ADC #4
	STA MSGADR+1
	STA VGLIST+1
	RTS
;***********************************************************************
	.SBTTL SELMP : RESUME GAME REMINDER DISPLAY INITIALIZATION
;
; DIAL A WAVE PRESETS
;
SELMP:	LDA MAXRES	;MAX ALLOWABLE START
	STA RESBIN
	LDA #15.
	STA DTIME
	JSR FXTEXT
	LDA #0
	STA BINWAV
	STA STARTS
	JSR TEXTS	;SELECT WAVE TEXT ROUTINE
;
	JMP LETRIP
;***********************************************************************
	.SBTTL SELMB : SELECT STARTING WAVE DISPLAY MAINTENANCE
;
; PICK-A-WAVE SELECT MODE BACKGROUND
;
SELMB:	LDA $TOUGH	;IN DEMO LET HIM PICK
	CMP #3
	BNE 66$
	LDA #69.
	STA DTIME
	LDA BINWAV
	CMP #93.
	BCS 42$
	CLC
	ADC #4
42$:	STA MAXRES
	STA RESBIN
66$:	INC FRMCNT
	LDA FRMCNT
	AND #7
	BEQ 10$
	JMP SLYSTK
10$:	LDA FLAGS3	;TEST FOR RIGHT JOYSTICK OFF-CENTER
	EOR #JYMASK
	AND #JYMASK
	BEQ NOSTYK	; NOT MOVING RIGHT STICK
	TAY
	AND #JYUP
	BNE LWRWAV
	TYA
	AND #JYDOWN
	BNE HYRWAV
NOSTYK:	LDA FLAGS2	;START + RIGHT STICK TO BEGIN GAME
	EOR #JYMASK
	AND #JYMASK
	BEQ SLYSTK		;NO START PRESSED
	LDA #0
	STA STARTS
	STA STRBOG
	LDA FLAGS3
	EOR #0FF
	AND #<STRT1!STRT2>
	BEQ SLYSTK	;NOPE
GO4IT:	LDA #0
	STA STARTS
	STA RESUME
	DEC BINWAV
	BMI 10$
	LDA #2		;HE CAN RESUME, # WAVES TO WAIT FOR $
	STA RESUME
10$:	LDA BINWAV
	STA RESBIN	;USE THE WAVE HE WANTED
	LDA #1		;GAME MODE IS NEXT
	STA NSTATE
	STA STGAME
	JMP NOTIME
SLYSTK:	JSR FXTEXT
	JSR TEXTS
	LDA DTIME
	BEQ GO4IT	; SAME WHEN WE TIME-OUT
	JMP FRAMED
;
;
; PLAYER WISHES A HIGHER OR LOWER STARTING WAVE THAN IS DISPLAYED
;
LWRWAV:	LDA BINWAV	;ALREADY AT ZERO?
	BEQ NOSTYK	;YEP
	SEC
	SBC #4
	STA BINWAV
	JSR SNDLS
	JMP NOSTYK
HYRWAV:	LDA BINWAV
	CMP RESBIN	;ALREADY AT MAXIMUM
	BCS NOSTYK	;YEP
	CLC
	ADC #4
	STA BINWAV
	JSR SNDLS
	JMP NOSTYK
;***********************************************************************
	.SBTTL GAMEP : GAME PLAY MODE DISPLAY INITIALIZATION
;
; GAME DISPLAY MODE PRE-PROCESSOR
;
;
GAMEP:	LDAL VGRAM	;ESTABLISH VGLIST AT START OF AVG RAM
	STA VGLIST
	LDAH VGRAM
	STA VGLIST+1
;
	JSR QCNTR		;CENTER THE BEAM
	LDA #1
	JSR VGSCA1		;SET SCALE TO NORMAL
	LDA VGLIST		;SAVE ADDRESS OF PLAYER SCORE JSRL'S
	STA S1VGAL
	LDA VGLIST+1
	STA S1VGAH
	LDA #<0E0!ZRED>		;NO REFLECTION
	LDX #0
	JSR DOSTA
	LDAL S1ADRX	;PUT IN PLAYER 1 SCORE LINKAGE
	STA VGX
	LDAH S1ADRX
	STA VGX+1
	LDAL S1ADRY
	STA VGY
	LDAH S1ADRY
	STA VGY+1
	JSR QVCTRL
	JSR PUTZRO
;
; SAVE DLIST LOCATION OF BONUS SO WE
; CAN TURN IT OFF IN ATTRACT
;
	LDA #8
	LDX #4
	JSR VGVTR1	;TO BONUS CENTER
	LDA VGLIST
	STA L1VGAL
	LDA VGLIST+1
	STA L1VGAH
	JSR BONBOD	;PUT UP LIFE SYMBOL
;
	LDA VGLIST		;SAVE ADDRESS OF PLAYER SCORE JSRL'S
	STA S2VGAL
	LDA VGLIST+1
	STA S2VGAH
	LDA #<0E0!ZRED>		;NO REFLECTION
	LDX #0
	JSR DOSTA
	LDAL S2ADRX	;PUT IN PLAYER 2 SCORE LINKAGE
	STA VGX
	LDAH S2ADRX
	STA VGX+1
	LDAL S2ADRY
	STA VGY
	LDAH S2ADRY
	STA VGY+1
	JSR QVCTRL
	JSR PUTZRO
;
; SAVE DLIST LOCATION OF BONUS SO WE
; CAN TURN IT OFF IN ATTRACT
;
	LDA #8
	LDX #4
	JSR VGVTR1
	LDA VGLIST
	STA L2VGAL
	LDA VGLIST+1
	STA L2VGAH
	JSR BONBOD	;PUT UP THE SPIDER W/ #LIVES
;
	STA RSTDOG		;HOLD DOG AT BAY
;
; INCLUDE WEB AND CRITTER MOTION LINKS DISPLAY LIST
;
	JSR WEBP
;
; INCLUDE CRITTER MOTION OBJECTS IN GAME
;
	STA RSTDOG	;HOLD OFF THE DOGS
	JSR MOTION
;
; LINK TO TEXT BUFFER AT 2400
;
	LDAH VGRAM
	CLC
	ADC #4
	LDX #0
	JSR VGJSRL
	JSR VGHALT
;
; SET MSGADR FOR TEXT ROUTINES AT 2400
;
	LDAL VGRAM
	STA VGLIST
	STA MSGADR
	LDAH VGRAM
	CLC
	ADC #4
	STA VGLIST+1
	STA MSGADR+1
	JSR VGRTSL
;
; SET BULLETS TO SPEED PER DIFFICULTY
;
	LDX #40
;
; SET BULLET SPEED TO 12 FOR DEMO
;
	LDY #12.
	LDA $TOUGH	;IN DEMO
	CMP #3
	BEQ STSPD	;YEP
	LDA #13.	;EASY=13 MED=12 HARD=11
	SEC
	SBC $TOUGH
	TAY
STSPD:	TYA
	STA X,OBJSPD
	LDA #4		;MAKE IT A BULLET
	STA X,OBJAUX
	TXA
	SEC
	SBC #10
	TAX
	BNE STSPD
	JMP LETRIP
;***********************************************************************
;
; GENERATE WEB VECTORS IN DISPLAY LIST
;
WEBP:	JSR QCNTR
;
	LDA #1
	JSR VGSCA1
	LDAL WEBCLR
	TAX
	LDAH WEBCLR
	JSR VGJSRL		;LINKAGE TO WEB
	LDA VGLIST
	STA VGLINK
	LDA VGLIST+1
	STA VGLINK+1
	LDAH WEBCLR	;WEB LOCATION
	STA VGLIST+1
	LDAL WEBCLR
	STA VGLIST
	LDA #40
	STA VGBRIT
;
	LDA #<0A0!ZBLUE>	;BLUE WEB
	LDX #0
	JSR DOSTA
;
	JSR DOWEB		;PUT IN RADIALS & WEBS FOR PLAYER #1
	JSR VGRTSL		;PUT IN A RETURN AS WELL
	LDA VGLINK
	STA VGLIST
	LDA VGLINK+1
	STA VGLIST+1
	RTS
;
; INITIALIZE OBJVGC & OBJVGA
;
MOTION:	LDX #0
	LDAH OBJVGA
	JSR VGJMPL		;PUT IN MOTION OBJECT LINKAGE
	LDA VGLIST	;PUT IN A JUMP BACK
	PHA
	LDA VGLIST+1
	PHA	;SAVE ADDR ON STACK
;
	JSR QCNTR	;LEAVE ROOM FOR START/END MESSAGES
;
; MESSAGES LIVE BETWEEN 4400 & 44FF
;
	LDX #0
	LDAH VGRAM
	CLC
	ADC #4
	JSR VGJSRL	;LINK TO THEM
	JSR VGHALT
	LDX #0		;FILL OBJVGA WILL NULL VECTORS
;
; AND POINT EACH DEFINITION TO CORRESPONDING OBJVGC
;
PSOBJV:	LDA #0
	STA X,OBJVGA	;NULL POSITION VECTORS
	STA X,OBJVGA+1
	STA X,OBJVGA+2
	STA X,OBJVGA+3
	TXA
	ORA #80		;OBJVGC @ 2100
	STA X,OBJVGA+4	;ADDR LSB OF OBJVGC LOC
	LDA #0A0	;JSRL TO 21XX
	STA X,OBJVGA+5
;
	LDA #40
	STA X,OBJVGA+6
	LDA #80
	STA X,OBJVGA+7	;CNTR INSTRUCTION
	TXA
	CLC
	ADC #8
	TAX
	CMP #80
	BNE PSOBJV
;
; MAKE LAST ONE A JMPL BACK TO MAIN LIST
;
	PLA
	STA FROM+1
	PLA
	STA FROM
	LSR FROM+1
	ROR FROM
	LDA FROM
	STA OBJVGA+7E
	LDA FROM+1
	AND #0F
	ORA #0E0
	STA OBJVGA+7F
;
	LDX #0
PSOBJC:	LDA #ZBLACK	;MAKE INTENSITY/COLOR BLACK
	STA X,OBJVGC
	LDA #60		;STAT INSTRUCTION
	STA X,OBJVGC+1
;
	LDA #0		;LINEAR SCALE = 0
	STA X,OBJVGC+2
	LDA #71		;SCAL INSTRUCTION
	STA X,OBJVGC+3
;
	LDA #0		;JSRL TO ANT BODY
	STA X,OBJVGC+4
	LDA #0B4	;MOSQUITO BODY ROTATION 0 @2800H
	STA X,OBJVGC+5
;
	LDA #ZBLACK	;INTENSITY/COLOR OFF
	STA X,OBJVGC+6
	LDA #60		;STAT INSTRUCTION
	STA X,OBJVGC+7
;
	LDA #00		;JSRL TO LEGS 0:0 @ 5E00H <**FIX**>
	STA X,OBJVGC+8
	LDA #0AF
	STA X,OBJVGC+9
;
	LDA #0		;SCAL
	STA X,OBJVGC+10.
	LDA #71		;SCAL INST
	STA X,OBJVGC+11.
;
	LDA #ZBLACK		;STAT INST
	STA X,OBJVGC+12.
	LDA #60
	STA X,OBJVGC+13.
	LDA #0		;RTSL INSTRUCTION
	STA X,OBJVGC+14.
	LDA #0C0
	STA X,OBJVGC+15.
;
	TXA
	CLC
	ADC #10
	TAX
	BCC PSOBJC
;
	LDA #0	;MOVE IN DUMMY SCORES FOR NEST/MUTANT
	STA VGLIST
	LDAH VGRAM
	CLC
	ADC #3
	STA VGLIST+1
;
; 2300-23FF USED FOR FALLING SCORE DISPLAYS
;
PDMY1:	LDY #0
PDMY2:	LDA Y,DMYSCR
	STA NY,VGLIST
	INY
	CPY #10
	BNE PDMY2
	LDA VGLIST
	CLC
	ADC #10
	STA VGLIST
	BCC PDMY1
	LDA #0
	STA WALKIN
	LDA #DEAD
	STA OBJFLG
	RTS
;
; ON POWER-UP PUT THE FOLLOWING IN HSTBL
;
;	B W	A G
;	L I	T A
;	A D	A M
;	C O	R E
;	K W	I S
;
ALLNAM:	LDX #0
NAMS1:	LDA X,ADVNM1
	STA X,HSTBL
	INX
	CPX #<3.*7>
	BNE NAMS1
;
OURNAM:	LDX #0
PRENAM:	LDA X,ADVNM2
	STA X,HSTBL+21.
	INX
	CPX #<17.*7>
	BNE PRENAM
	RTS
;
; CHAR CODES FOR BLACK WIDOW ATARI GAMES PRESETS FOR HS TABLE
;
ADVNM1:	.BYTE 0C2,0D7,0CD,05,43,21,14
	.BYTE 12,47,82,04,32,10,11
	.BYTE 10,4,11,03,21,00,09
ADVNM2:	.BYTE 0DB,1B,5B,01,08,01,11	;3 STARS 10801 11
	.BYTE 0C2,4,4D,01,01,01,11	;BDM
	.BYTE 0D2,5,4F,01,01,01,11	;REO
	.BYTE 0D5,0E,52,01,01,01,11	;UNR
	.BYTE 0C3,0E,47,01,01,01,11	;CNG
	.BYTE 0C5,9,41,01,01,01,11	;EIA
	.BYTE 0DB,13,4E,01,01,01,11	;*SN;
; 
; BOTTOM TEN
;
	.BYTE 0C2,9B,17,01,01,01,11	;B*L
	.BYTE 0CC,9B,09,01,01,01,11	;L*I
	.BYTE 0C1,9B,04,01,01,01,11	;A*D
	.BYTE 0C3,9B,0F,01,01,01,11	;C*O
	.BYTE 0CB,9B,17,01,01,01,11	;K*W
;
	.BYTE 0C1,9B,07,01,01,01,11	;A*G
	.BYTE 0D4,9B,01,01,01,01,11	;T*A
	.BYTE 0C1,9B,0D,01,01,01,11	;A*M
	.BYTE 0D2,9B,05,01,01,01,11	;R*E
	.BYTE 0C9,9B,13,01,01,01,11	;I*S
;
; INCLUDE A SPIDER PICTURE AFTER EACH PLAYER'S SCORE
;
BONBOD:	LDA #0
	TAX
	JSR DOSTA	;COLOR=BLACK
	LDAL BONUS
	TAX
	LDAH BONUS
	JSR VGJSRL
	LDY #60
	LDA #1
	JSR VGSCAL
	LDA #0	;LIVES DIGIT BLACK AS WELL
	LDX #0
	JSR DOSTA
	LDA #0
	SEC
	JSR VGHEXZ	;# LIVES IN BODY
	LDY #0
	LDA #1
	JSR VGSCAL
	JSR QCNTR
	RTS
;
	.END
                                                                                                                                                     