	.TITLE BBSCOR
	.INCLUDE BBRAM
;
;      *******************************************************
;      * COPYRIGHT 1982 ATARI. UNAUTHORIZED REPRODUCTION,    *
;      * ADAPTATION, DISTRIBUTION, PERFORMANCE OR DISPLAY OF *
;      * THIS COMPUTER PROGRAM OR THE ASSOCIATED AUDIOVISUAL *
;      * WORK IS STRICTLY PROHIBITED!!!!!!!                  *
;      *******************************************************
;
; EXTERNAL REFERENCES
;
	.GLOBL SUMS7	;CHECKSUM C000-CFFF
	.GLOBL VGSTAT,VGVTR1,QCNTR,VGMSGA,VGADD
	.GLOBL VGSCAL,SNDMK,INISOU
	.GLOBL MHIGHS,MESG,HEXBCD
	.GLOBL VGHEXZ	;VG DIGIT DIPLAY
	.GLOBL SNDBL	;BONUS LIFE AWARDED
	.GLOBL LITEM	;LITE-UP EXTRA LIVES
;
;
; GLOBAL DEFINITIONS
;
	.GLOBL COLETR
	.GLOBL ZEETBL	;CLEAR H/S TABLE (EAROM)
	.GLOBL SEETBL	;SEE HS TABLE
	.GLOBL MPLAYR
	.GLOBL FDIGIT
	.GLOBL PDIGIT
	.GLOBL FINDHS	;RATE CURRENT SCORE
	.GLOBL TTSTAT
	.GLOBL TTSCL1
	.GLOBL TTSCL2
	.GLOBL SHOW1
	.GLOBL SCORIT	;UPDATE SCORE ENTRANCE
	.GLOBL SEEPNT	;SCORE ROUTINE
;
; <A> IS LSB VALUE TO BE ADDED TO SCORE
; <Y> IS MSB VALUE
;
CHKSM7::	.WORD SUMS7	;CHECKSUM FOR C000-CFFF
SCORIT:	BIT ATRACT	;NO SCORE IN ATTRACT
	BMI SCORTS
	CLC
	SED
	ADC SCORE+2
	STA SCORE+2
	TYA
	ADC SCORE+1
	STA SCORE+1
	BCC NOSCR
	LDA SCORE
	ADC #0
	STA SCORE
NOSCR:	CLD
	LDY BLIVES
	BEQ SCORTS
	SED
	LDY #0		;COUNT UP # BONUS LIFE INCREMENTS WE'RE AT
	LDA SCORE
4$:	INY
	SEC
	SBC BLIVES
	BPL 4$		;DIVIDE BY BONUS INTERVAL
	CLD
	DEY
	CPY PRVMSB	;SAME AS LAST TIME?
	BEQ SCORTS	;YEP
	STY PRVMSB	;SAVE MULTIPLE FOR NEXT TIME
	TXA		;SAVE X&Y DURING LITEM
	PHA
	TYA
	PHA
	LDA LIVES	;6 IN RESERVE MAX
	CMP #6
	BCS MAKNOY
	INC LIVES	;GIVE HIM ONE MORE
	LDA NPLYRS	;SAVE PLAYER 1 IF 0
	BEQ 10$
	LDA PLAYER
	BEQ 10$
	LDA LIVES
	STA GSAVE2+LIFE
	JMP 20$
10$:	LDA LIVES
	STA GSAVE1+LIFE
20$:	JSR LITEM
MAKNOY:	JSR SNDBL	;BEEP FOR BONUS LIFE
	PLA
	TAY
	PLA
	TAX
SCORTS:	RTS
;
; ROUTINE TO UPDATE PLAYER SCORE DISPLAYS
;
SEEPNT:	LDA PLAYER
	BEQ SEEPN1
	LDA SCORE
	STA GSAVE2+SCOR
	LDA SCORE+1
	STA GSAVE2+SCOR+1
	LDA SCORE+2
	STA GSAVE2+SCOR+2
	JMP SEEPN2
SEEPN1:	LDA SCORE
	STA GSAVE1+SCOR
	LDA SCORE+1
	STA GSAVE1+SCOR+1
	LDA SCORE+2
	STA GSAVE1+SCOR+2
SEEPN2:	LDA GSAVE1+SCOR
	STA SCORE
	LDA GSAVE1+SCOR+1
	STA SCORE+1
	LDA GSAVE1+SCOR+2
	STA SCORE+2
	LDA S1VGAH
	STA VGLIST+1
	LDA S1VGAL
	STA VGLIST
	LDY #0
	LDX #0C4	;MEDIUM INTENSITY RED
	BIT ATRACT
	BMI 10$
	LDA PLAYER
	BNE 10$
	BIT ONEHZ	;FLASHES AT 2 HZ RATE
	BPL 10$
	LDX #0C7
10$:	TXA
	STA NY,VGLIST
	JSR SEEPN3
	LDA GSAVE2+SCOR
	STA SCORE
	LDA GSAVE2+SCOR+1
	STA SCORE+1
	LDA GSAVE2+SCOR+2
	STA SCORE+2
	LDA S2VGAL
	STA VGLIST
	LDA S2VGAH
	STA VGLIST+1
	LDY #0
	LDX #0C4	;MEDIUM INTENSITY RED
	BIT ATRACT
	BMI 20$
	LDA PLAYER
	BEQ 20$
	BIT ONEHZ
	BPL 20$
	LDX #0C7
20$:	TXA
	STA NY,VGLIST
	JSR SEEPN3
	LDA PLAYER
	BNE RSTRXT
	LDA GSAVE1+SCOR
	STA SCORE
	LDA GSAVE1+SCOR+1
	STA SCORE+1
	LDA GSAVE1+SCOR+2
	STA SCORE+2
RSTRXT:	RTS
SEEPN3:	LDA #6
	CLC
	ADC VGLIST
	STA VGLIST
	LDX #0
	LDY #0
	STY TEMP	;TEMP=0 SUPPRESS 0'S  TEMP<0 SHOW 0'S
SESCR:	LDA X,SCORE
	LSR
	LSR
	LSR
	LSR
	BEQ WUZERO	;A ZERO
	DEC TEMP	;SET TEMP NEGATIVE
WUZERO:	BIT TEMP	;MSB DETERMINES SUPRESSION
	CLC
	BMI SEEZRO
	SEC
SEEZRO:	STX TEMP1	;INTERRUPT TEMP
	JSR VGHEXZ
	LDX TEMP1
	LDA X,SCORE
	AND #0F
	BEQ WZRO2
	DEC TEMP
WZRO2:	BIT TEMP
	CLC
	BMI SEE2ND
	SEC
SEE2ND:	JSR VGHEXZ
	LDX TEMP1
	INX
	CPX #3
	BNE SESCR
	RTS
;
; HSTBL IS IN RAM AND CONTAINS THE 32
; HIGHEST SCORES.  THE TOP 3 ARE SAVED
; AND RESTORED FROM EAROM ON POWER UP
; AND WHENEVER SOMEONE MAKES THE CHARTS.
;
NENT	= 20.	;NUMBER OF ENTRIES
BPENT	= 7	;BYTES/ENTRY
MAXNAM	= NENT*BPENT	;MAX ENTRY# + 1
HLFWAY	= MAXNAM/2
;
; SEETBL
;
; OUTPUTS ENTIRE TABLE TO DISPLAY LIST
;
TTX1ST:	.BYTE 0CE
TTY1ST:	.BYTE 50
TTYINC:	.BYTE 0B
TTSTAT:	.BYTE 0E0!ZRED
TTSCL1:	.BYTE 0
TTSCL2:	.BYTE 1		;NORMAL SIZE
;
ARX1ST:	.BYTE -70
ARY1ST: .BYTE -20
ARX2ND:	.BYTE 10
ARYINC:	.BYTE 0B
ARSTAT:	.BYTE 0E0!ZBLUE
ARSCL1:	.BYTE 0
ARSCL2:	.BYTE 1		;NORMAL SIZE
;
SEETBL:	LDA DSTATE	;IN HS DISPLAY?
	CMP #3
	BEQ SEESXX	;YEP
	LDA NPLYRS
	BEQ SEESXX	;NOT WHEN ONLY 1 PLAYER
	LDX #MPLAYR
	JSR MESG
	LDA PLAYER
	CLC
	ADC #1
	JSR VGHEXZ
	JMP USINPL
SEESXX:	LDX #MHIGHS
	JSR MESG
USINPL:	LDA TTX1ST	;1ST COLUMN MIN X
	STA TRIALX
	LDA TTY1ST	;1ST COLUMN Y
	STA TRIALY
	LDA TTYINC
	STA FOODY
	LDA TTSTAT
	STA FOODX
	LDA TTSCL1
	STA TRIALX+1
	LDA TTSCL2
	STA TRIALY+1
;
; START WITH HIGHEST SCORE
;
	LDA #0
	STA TEMP	;TABLE INDEX*7
	STA TEMP3	;TABLE INDEX
	STA VGBRIT	;SET DEFAULT TO OFF
	LDA #01		;BCD RANK NUMBER
	STA TEMP2
PUTNAM:	JSR SHOW1
	LDA #0
	JSR PLETR	;SPACE THEN WAVE#
	LDX TEMP
	LDA X,HSTBL+6
	JSR FDIGIT
	DEY		;UPDATE VGLIST
	JSR VGADD
	LDA TRIALY	;DECREMENT Y POSITION
	SEC
	SBC FOODY
	STA TRIALY
	LDA TEMP	;ENTRY NUMBER
	CLC
	ADC #BPENT	;BYTES/ENTRY
	STA TEMP
	INC TEMP3	;BINARY ENTRY NUMBER
	LDA TEMP2	;HALF WAY?
	CMP #11		;NOT FINISHED WITH TOP TEN
	BNE NOTHLF	;NOPE
	LDA ARX1ST
	STA TRIALX
	LDA ARY1ST
	STA TRIALY
	LDA ARYINC
	STA FOODY
	LDA ARSTAT
	STA FOODX
	LDA ARSCL1
	STA TRIALX+1
	LDA ARSCL2
	STA TRIALY+1
GOSEE:	JMP PUTNAM	;CONTINUE
NOTHLF:	CMP #21		;DONE?
	BCC TWOCOL	;NOPE
	RTS		;DONE
TWOCOL:	CMP #16
	BNE GOSEE
	LDA ARX2ND
	STA TRIALX
	LDA ARY1ST
	STA TRIALY
	JMP GOSEE
;
PLETR:	TAX		;SAVE CHAR CODE
	BEQ VSPACE	;SPACE CODE
	ASL
	ADC #20.	;A IS NEXT
	TAX
VSPACE:	LDA X,VGMSGA
	JSR PUNCH
	LDA X,VGMSGA+1
	JMP PUNCH	;PUT IN JSRL TO CORRECT LETTER
;
FDIGIT:	LDX #0
	STX FOODX+1	;0=SUPRES 80=NO
PDIGIT:	PHA		;SAVE 2 DIGITS
	AND #0F0
	LSR
	LSR
	LSR
	JSR SDIGIT	;SHOW ONE DIGIT
	PLA
	AND #0F
	ASL
SDIGIT:	BEQ TSUPRS
	LDX #0FF	;NON Z CHAR CLEAR SUPRESS
	STX FOODX+1
	JMP ADIGIT
TSUPRS:	BIT FOODX+1
	BMI ADIGIT
	LDX #0
	JMP DBLANK
ADIGIT:	CLC
	ADC #2
	TAX
DBLANK:	LDA X,VGMSGA
	JSR PUNCH
	LDA X,VGMSGA+1
PUNCH:	STA NY,VGLIST
	INY
	BNE NOMSB
	INC VGLIST+1
NOMSB:	RTS
;
NOTHIS:	INC INTADR	;INCREMENT SLOT NUMBER
	LDA TEMP
	CLC
	ADC #BPENT
	CMP #MAXNAM
	BCC SCANHS
;
; WE DIDN'T MAKE THE CHARTS... SHOW THE TABLE NEXT ANYWAY
;
	LDA #1
	STA NSTATE
	LDA #0FF	;CLEAR INTADR FLAG FOR NO HIGHLIGHTING
	STA INTADR
	LDA #0
	STA INTADR+1	;FLAGS FOR HS HIGHLIGHTING
	RTS
;
; FIND IF OUR SCORE BEATS ANYTHING IN THE TABLE
; ON RETURN NSTATE=4 MADE THE CHARTS: DIDN'T OTHERWISE
; IENTRY HOLDS LETTER NUMBER OF WHICH INITIAL
; IS BEING ENTERED 1,2 OR 3
;
FINDHS:	LDA #0
	STA INTADR	;WHICH SCORE WE BEAT
	STA INTADR+1
SCANHS:	STA TEMP
	SEC
	LDX TEMP
	LDA X,HSTBL+5
	SBC SCORE+2
	LDA X,HSTBL+4
	SBC SCORE+1
	LDA X,HSTBL+3
	SBC SCORE
	BCS NOTHIS	;DON'T BEAT THIS ONE
	CPX #MAXNAM-BPENT
	BEQ MADEIT	;WE'RE ON THE BOTTOM
;
; FIND 1ST ENTRY IN TABLE THAT HAS 0 FOR
; WAVE NUMBER, THAT IS BOTTOM
;
	LDY #MAXNAM-BPENT
FIND0:	LDA Y,HSTBL+6	;THIS ALLOWS MESSAGE
	BNE LSTHOL	;TO STAY TILL SCORES
	TYA
	SEC
	SBC #BPENT
	TAY
	BPL FIND0
	LDX #0
	JMP MADEIT
LSTHOL:	TYA
	CLC
	ADC #BPENT
	TAX		;IN CASE ZERO WAS WHERE THIS SCORE GOES
	CMP TEMP
	BEQ MADEIT
	TAY
HOLER:	SEC
	SBC #BPENT
	TAX
	LDA X,HSTBL
	STA Y,HSTBL
	LDA X,HSTBL+1
	STA Y,HSTBL+1
	LDA X,HSTBL+2
	STA Y,HSTBL+2
	LDA X,HSTBL+3
	STA Y,HSTBL+3
	LDA X,HSTBL+4
	STA Y,HSTBL+4
	LDA X,HSTBL+5
	STA Y,HSTBL+5
	LDA X,HSTBL+6
	STA Y,HSTBL+6
	TXA
	TAY
	CPX TEMP
	BNE HOLER
MADEIT:	STX INTIDX	;SAVE WHERE TO PUT INITIALS
	LDA SCORE
	STA X,HSTBL+3
	LDA SCORE+1
	STA X,HSTBL+4
	LDA SCORE+2
	STA X,HSTBL+5
	LDA #0		;BLANK INITIALS
	STA X,HSTBL
	STA X,HSTBL+1
	STA X,HSTBL+2
	LDA BINWAV	;WAVE NUMBER TOO
	CLC
	ADC #1
	JSR HEXBCD	;CONVERT TO BCD
	STA X,HSTBL+6
;
	JSR INISOU	;STOP & INITIALIZE ALL SOUNDS
	JSR SNDMK	;MADE CHART SOUND
	LDA #4		;SET ENTER INITIALS STATE
	STA NSTATE
	RTS
SHOW1:	JSR QCNTR	;CENTER
	LDY #0
	LDA #1
	JSR VGSCAL
	LDA TRIALX
	LDX TRIALY
	JSR VGVTR1	;START OF THIS GUY
	LDY TRIALX+1	;LINEAR
	LDA TRIALY+1	;BINARY & SELECT
	JSR VGSCAL
	LDA TEMP3	;ABOUT TO DO WINNING POSITION?
	CMP INTADR	;IF SO SAVE DLIST LOCATION
	BNE NOWINR	;NOPE
	LDA VGLIST	;SAVE POINTER FOR HIGHLIGHTING
	STA INTADR	;DISPLAY LIST ADDRES OF STAT
	LDA VGLIST+1
	STA INTADR+1
NOWINR:	LDY FOODX
	LDA #0
	JSR VGSTAT
	LDY #0		;VGLIST OFFSET
	LDA DSTATE	;IF IN GAME MODE
	BEQ NALONE
	CMP #1		;NO RANK NUMBER
	BEQ NALONE
	LDA TEMP2	;RANK NUMBER
	JSR FDIGIT
	LDA #0		;FOLLOWING SPACE
	JSR PLETR
	SED		;INCREMENT NUMBER
	CLC
	LDA #01
	ADC TEMP2
	STA TEMP2
	CLD
NALONE:	LDX TEMP	;NAME INDEX
;
; NEW MULTI-COLORED INITIALS CODE
;
	LDA X,HSTBL
	JSR LTRCLR	;PUT OUT STAT FOR THIS LETTER
;
	LDA X,HSTBL	;1ST LETTER
	AND #1F
	JSR PLETR	;PUT 1 LETTER
	LDX TEMP
;
; NEW MULTI-COLORED INITIALS CODE
;
	LDA X,HSTBL+1
	JSR LTRCLR	;PUT OUT STAT FOR THIS LETTER
;
	LDA X,HSTBL+1
	AND #1F
	JSR PLETR	;MIDDLE INITIAL
	LDX TEMP
;
; NEW MULTI-COLORED INITIALS CODE
;
	LDA X,HSTBL+2
	JSR LTRCLR	;PUT OUT STAT FOR THIS LETTER
;
	LDA X,HSTBL+2
	AND #1F
	JSR PLETR	;LAST INITIAL
;
; RESTORE NORMAL COLOR AFTER INITIALS DONE
;
	LDA FOODX
	JSR PUNCH
	LDA #60
	JSR PUNCH
;
	LDA #0		;SPACE AFTER 3RD INITIAL
	JSR PLETR
	LDX TEMP	;GET SCORE
	LDA X,HSTBL+3	;MS 2 SCORE DIGITS
	JSR FDIGIT
	LDX TEMP
	LDA X,HSTBL+4
	JSR PDIGIT
	LDX TEMP
	LDA X,HSTBL+5
	JMP PDIGIT
;
; USING HIGH 2 BITS OF THE STORED INITIAL CODE, SELECT COLOR
;
LTRCLR:	LSR
	LSR
	LSR
	LSR
	LSR
	LSR
	TAX
	LDA X,COLETR
	LDX TEMP
	JSR PUNCH
	LDA #60
	JSR PUNCH
	RTS
COLETR:	.BYTE 0C0!ZRED,0C0!ZGREEN,0C0!ZBLUE,0C0!ZWHITE
;
; ZERO HIGH-SCORE TABLE (VIA MOVE BUTTON)
;
ZEETBL:	LDX #0	;ZERO ENTIRE TABLE
ZIPTBL:	LDA #0
	STA X,HSTBL
	INX
	CPX #MAXNAM
	BNE ZIPTBL
	RTS
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                  